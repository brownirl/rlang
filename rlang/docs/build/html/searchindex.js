Search.setIndex({docnames:["agents","grounding_reference","index","install","language_reference","modules","rlang","rlang.agents","rlang.grounding","rlang.grounding.utils","rlang.language","rlang.language.utils","tutorial"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":4,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":3,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.viewcode":1,sphinx:56},filenames:["agents.rst","grounding_reference.rst","index.rst","install.rst","language_reference.rst","modules.rst","rlang.rst","rlang.agents.rst","rlang.grounding.rst","rlang.grounding.utils.rst","rlang.language.rst","rlang.language.utils.rst","tutorial.rst"],objects:{"":{rlang:[6,0,0,"-"]},"rlang.agents":{RLangQLearningAgentClass:[7,0,0,"-"]},"rlang.agents.RLangQLearningAgentClass":{RLangQLearningAgent:[7,1,1,""]},"rlang.core":{parse:[6,2,1,""],parse_file:[6,2,1,""]},"rlang.grounding":{groundings:[8,0,0,"-"],utils:[9,0,0,"-"]},"rlang.grounding.groundings":{ActionDistribution:[8,1,1,""],ActionReference:[8,1,1,""],ConstantGrounding:[8,1,1,""],Effect:[8,1,1,""],Factor:[8,1,1,""],Feature:[8,1,1,""],Goal:[8,1,1,""],Grounding:[8,1,1,""],GroundingDistribution:[8,1,1,""],GroundingFunction:[8,1,1,""],IdentityGrounding:[8,1,1,""],MarkovFeature:[8,1,1,""],Option:[8,1,1,""],OptionTermination:[8,1,1,""],Plan:[8,1,1,""],Policy:[8,1,1,""],Prediction:[8,1,1,""],PrimitiveGrounding:[8,1,1,""],ProbabilisticFunction:[8,1,1,""],ProbabilityDistribution:[8,1,1,""],Proposition:[8,1,1,""],RewardDistribution:[8,1,1,""],RewardFunction:[8,1,1,""],StateDistribution:[8,1,1,""],TransitionFunction:[8,1,1,""],ValueFunction:[8,1,1,""]},"rlang.grounding.groundings.ActionDistribution":{calculate_true_distribution:[8,3,1,""]},"rlang.grounding.groundings.Effect":{compose_probabilities:[8,3,1,""],prediction_dict:[8,4,1,""],shallow_copy:[8,3,1,""]},"rlang.grounding.groundings.Factor":{indexer:[8,4,1,""]},"rlang.grounding.groundings.Feature":{from_Factor:[8,3,1,""]},"rlang.grounding.groundings.Grounding":{equals:[8,3,1,""],name:[8,4,1,""]},"rlang.grounding.groundings.GroundingDistribution":{calculate_true_distribution:[8,3,1,""],from_list_eq:[8,3,1,""],from_single:[8,3,1,""]},"rlang.grounding.groundings.GroundingFunction":{"function":[8,4,1,""],codomain:[8,4,1,""],domain:[8,4,1,""]},"rlang.grounding.groundings.MarkovFeature":{from_Factor:[8,3,1,""]},"rlang.grounding.groundings.Option":{can_initiate:[8,3,1,""]},"rlang.grounding.groundings.Plan":{append:[8,3,1,""],extend:[8,3,1,""],reset:[8,3,1,""]},"rlang.grounding.groundings.Policy":{from_action_distribution:[8,3,1,""]},"rlang.grounding.groundings.Prediction":{from_grounding_distribution:[8,3,1,""]},"rlang.grounding.groundings.ProbabilisticFunction":{compose_probability:[8,3,1,""],probability:[8,4,1,""]},"rlang.grounding.groundings.ProbabilityDistribution":{calculate_domain:[8,3,1,""],calculate_true_distribution:[8,3,1,""],compose_probabilities:[8,3,1,""],from_list_eq:[8,3,1,""],from_single:[8,3,1,""],join:[8,3,1,""],sample:[8,3,1,""],update_metadata:[8,3,1,""]},"rlang.grounding.groundings.Proposition":{FALSE:[8,3,1,""],TRUE:[8,3,1,""],from_PrimitiveGrounding:[8,3,1,""]},"rlang.grounding.groundings.RewardDistribution":{calculate_true_distribution:[8,3,1,""],expected:[8,3,1,""],from_list_eq:[8,3,1,""]},"rlang.grounding.groundings.RewardFunction":{from_reward_distribution:[8,3,1,""]},"rlang.grounding.groundings.StateDistribution":{calculate_true_distribution:[8,3,1,""]},"rlang.grounding.groundings.TransitionFunction":{from_state_distribution:[8,3,1,""]},"rlang.grounding.utils":{grounding_exceptions:[9,0,0,"-"],primitives:[9,0,0,"-"],utils:[9,0,0,"-"]},"rlang.grounding.utils.grounding_exceptions":{RLangGroundingError:[9,5,1,""]},"rlang.grounding.utils.primitives":{Action:[9,1,1,""],Primitive:[9,1,1,""],State:[9,1,1,""]},"rlang.grounding.utils.primitives.Primitive":{as_tuple:[9,3,1,""],unbatched_eq:[9,3,1,""],unwrap:[9,3,1,""]},"rlang.grounding.utils.utils":{Domain:[9,1,1,""],MDPMetadata:[9,1,1,""]},"rlang.grounding.utils.utils.Domain":{ACTION:[9,6,1,""],ANY:[9,6,1,""],BOOLEAN:[9,6,1,""],FACTOR_STATE:[9,6,1,""],NEXT_STATE:[9,6,1,""],REAL_VALUE:[9,6,1,""],REWARD:[9,6,1,""],STATE:[9,6,1,""],STATE_ACTION:[9,6,1,""],STATE_ACTION_NEXT_STATE:[9,6,1,""],STATE_NEXT_STATE:[9,6,1,""],STATE_VALUE:[9,6,1,""],from_name:[9,3,1,""]},"rlang.grounding.utils.utils.MDPMetadata":{from_state_action:[9,3,1,""]},"rlang.knowledge":{RLangKnowledge:[6,1,1,""]},"rlang.knowledge.RLangKnowledge":{effects:[6,3,1,""],factors:[6,3,1,""],features:[6,3,1,""],next_state:[6,3,1,""],policies:[6,3,1,""],predictions:[6,3,1,""],propositions:[6,3,1,""],reward_function:[6,6,1,""],rlang_variables_of_type:[6,3,1,""],transition_function:[6,6,1,""]},"rlang.language":{RLangErrorListener:[10,0,0,"-"],RLangErrorStrategy:[10,0,0,"-"],RLangLexer:[10,0,0,"-"],RLangListener:[10,0,0,"-"],RLangParser:[10,0,0,"-"],RLangParserListener:[10,0,0,"-"],utils:[11,0,0,"-"]},"rlang.language.RLangErrorListener":{RLangErrorListener:[10,1,1,""]},"rlang.language.RLangErrorListener.RLangErrorListener":{syntaxError:[10,3,1,""]},"rlang.language.RLangErrorStrategy":{RLangErrorStrategy:[10,1,1,""]},"rlang.language.RLangErrorStrategy.RLangErrorStrategy":{recoverInline:[10,3,1,""],sync:[10,3,1,""]},"rlang.language.RLangLexer":{RLangLexer:[10,1,1,""],serializedATN:[10,2,1,""]},"rlang.language.RLangLexer.RLangLexer":{A:[10,6,1,""],ACTION:[10,6,1,""],AND:[10,6,1,""],ANY:[10,6,1,""],ANY_CONDITION:[10,6,1,""],ASSIGN:[10,6,1,""],BIND:[10,6,1,""],COL:[10,6,1,""],COM:[10,6,1,""],CONSTANT:[10,6,1,""],DECIMAL:[10,6,1,""],DEDENT:[10,6,1,""],DIVIDE:[10,6,1,""],DIV_EQ:[10,6,1,""],DYNAMICS:[10,6,1,""],EFFECT:[10,6,1,""],ELIF:[10,6,1,""],ELSE:[10,6,1,""],EQ_TO:[10,6,1,""],EXECUTE:[10,6,1,""],FACTOR:[10,6,1,""],FALSE:[10,6,1,""],FEATURE:[10,6,1,""],FNAME:[10,6,1,""],GOAL:[10,6,1,""],GT:[10,6,1,""],GT_EQ:[10,6,1,""],IDENTIFIER:[10,6,1,""],IF:[10,6,1,""],IMPORT:[10,6,1,""],IN:[10,6,1,""],INDENT:[10,6,1,""],INIT:[10,6,1,""],INTEGER:[10,6,1,""],LT:[10,6,1,""],LT_EQ:[10,6,1,""],L_BRK:[10,6,1,""],L_PAR:[10,6,1,""],MAIN:[10,6,1,""],MARKOVFEATURE:[10,6,1,""],MINUS:[10,6,1,""],MINUS_EQ:[10,6,1,""],NEVER:[10,6,1,""],NL:[10,6,1,""],NOT:[10,6,1,""],NOT_EQ:[10,6,1,""],OPTION:[10,6,1,""],OR:[10,6,1,""],P:[10,6,1,""],PLUS:[10,6,1,""],PLUS_EQ:[10,6,1,""],POLICY:[10,6,1,""],PREDICT:[10,6,1,""],PRIME:[10,6,1,""],PROPOSITION:[10,6,1,""],REWARD:[10,6,1,""],R_BRK:[10,6,1,""],R_PAR:[10,6,1,""],S:[10,6,1,""],SKIP_:[10,6,1,""],S_PRIME:[10,6,1,""],SimpleDenter:[10,1,1,""],THEN:[10,6,1,""],TIMES:[10,6,1,""],TIMES_EQ:[10,6,1,""],TRUE:[10,6,1,""],UNTIL:[10,6,1,""],WITH:[10,6,1,""],atn:[10,6,1,""],channelNames:[10,6,1,""],decisionsToDFA:[10,6,1,""],denter:[10,6,1,""],grammarFileName:[10,6,1,""],literalNames:[10,6,1,""],modeNames:[10,6,1,""],nextToken:[10,3,1,""],ruleNames:[10,6,1,""],symbolicNames:[10,6,1,""]},"rlang.language.RLangLexer.RLangLexer.SimpleDenter":{pull_token:[10,3,1,""]},"rlang.language.RLangListener":{RLangListener:[10,1,1,""]},"rlang.language.RLangListener.RLangListener":{addVariable:[10,3,1,""],enterAny_decimal:[10,3,1,""],enterAny_integer:[10,3,1,""],enterImport_stat:[10,3,1,""],exitAction:[10,3,1,""],exitAny_array_any_num:[10,3,1,""],exitAny_array_compound:[10,3,1,""],exitAny_num_array_exp:[10,3,1,""],exitAny_num_dec:[10,3,1,""],exitAny_num_int:[10,3,1,""],exitArith_array:[10,3,1,""],exitArith_bound_var:[10,3,1,""],exitArith_number:[10,3,1,""],exitArith_paren:[10,3,1,""],exitArith_plus_minus:[10,3,1,""],exitArith_times_divide:[10,3,1,""],exitBool_and:[10,3,1,""],exitBool_arith_eq:[10,3,1,""],exitBool_bool_eq:[10,3,1,""],exitBool_bound_var:[10,3,1,""],exitBool_in:[10,3,1,""],exitBool_not:[10,3,1,""],exitBool_or:[10,3,1,""],exitBool_paren:[10,3,1,""],exitBool_tf:[10,3,1,""],exitBound_action:[10,3,1,""],exitBound_identifier:[10,3,1,""],exitBound_next_state:[10,3,1,""],exitBound_state:[10,3,1,""],exitCompound_array_compound:[10,3,1,""],exitCompound_array_simple:[10,3,1,""],exitConditional_effect:[10,3,1,""],exitConditional_subpolicy:[10,3,1,""],exitConstant:[10,3,1,""],exitEffect:[10,3,1,""],exitEffect_reference:[10,3,1,""],exitEffect_statement_collection:[10,3,1,""],exitEffect_statement_conditional:[10,3,1,""],exitEffect_statement_prediction:[10,3,1,""],exitEffect_statement_probabilistic:[10,3,1,""],exitEffect_statement_reference:[10,3,1,""],exitEffect_statement_reward:[10,3,1,""],exitExecute:[10,3,1,""],exitFactor:[10,3,1,""],exitFeature:[10,3,1,""],exitGoal:[10,3,1,""],exitImports:[10,3,1,""],exitInt_array_exp:[10,3,1,""],exitInteger_fraction:[10,3,1,""],exitMarkov_feature:[10,3,1,""],exitOption:[10,3,1,""],exitOption_condition:[10,3,1,""],exitPolicy:[10,3,1,""],exitPolicy_statement_conditional:[10,3,1,""],exitPolicy_statement_execute:[10,3,1,""],exitPolicy_statement_probabilistic:[10,3,1,""],exitPrediction:[10,3,1,""],exitProbabilistic_condition:[10,3,1,""],exitProbabilistic_effect:[10,3,1,""],exitProbabilistic_effect_statement_no_sugar:[10,3,1,""],exitProbabilistic_effect_statement_sugar:[10,3,1,""],exitProbabilistic_policy_statement_no_sugar:[10,3,1,""],exitProbabilistic_policy_statement_sugar:[10,3,1,""],exitProbabilistic_subpolicy:[10,3,1,""],exitProposition:[10,3,1,""],exitReward:[10,3,1,""],exitSlice_exp:[10,3,1,""],exitTrailer_array:[10,3,1,""],exitTrailer_slice:[10,3,1,""],parseVocabFiles:[10,3,1,""],retrieveVariable:[10,3,1,""]},"rlang.language.RLangParser":{RLangParser:[10,1,1,""],serializedATN:[10,2,1,""]},"rlang.language.RLangParser.RLangParser":{A:[10,6,1,""],ACTION:[10,6,1,""],AND:[10,6,1,""],ANY:[10,6,1,""],ANY_CONDITION:[10,6,1,""],ASSIGN:[10,6,1,""],ActionContext:[10,1,1,""],Any_arrayContext:[10,1,1,""],Any_array_any_numContext:[10,1,1,""],Any_array_compoundContext:[10,1,1,""],Any_bound_varContext:[10,1,1,""],Any_decimalContext:[10,1,1,""],Any_integerContext:[10,1,1,""],Any_num_array_expContext:[10,1,1,""],Any_num_decContext:[10,1,1,""],Any_num_intContext:[10,1,1,""],Any_numberContext:[10,1,1,""],Arith_arrayContext:[10,1,1,""],Arith_bound_varContext:[10,1,1,""],Arith_numberContext:[10,1,1,""],Arith_parenContext:[10,1,1,""],Arith_plus_minusContext:[10,1,1,""],Arith_times_divideContext:[10,1,1,""],Arithmetic_expContext:[10,1,1,""],BIND:[10,6,1,""],Bool_andContext:[10,1,1,""],Bool_arith_eqContext:[10,1,1,""],Bool_bool_eqContext:[10,1,1,""],Bool_bound_varContext:[10,1,1,""],Bool_inContext:[10,1,1,""],Bool_notContext:[10,1,1,""],Bool_orContext:[10,1,1,""],Bool_parenContext:[10,1,1,""],Bool_tfContext:[10,1,1,""],Boolean_expContext:[10,1,1,""],Bound_actionContext:[10,1,1,""],Bound_identifierContext:[10,1,1,""],Bound_next_stateContext:[10,1,1,""],Bound_stateContext:[10,1,1,""],COL:[10,6,1,""],COM:[10,6,1,""],CONSTANT:[10,6,1,""],Compound_array_compoundContext:[10,1,1,""],Compound_array_expContext:[10,1,1,""],Compound_array_simpleContext:[10,1,1,""],Conditional_effectContext:[10,1,1,""],Conditional_subpolicyContext:[10,1,1,""],ConstantContext:[10,1,1,""],DECIMAL:[10,6,1,""],DEDENT:[10,6,1,""],DIVIDE:[10,6,1,""],DIV_EQ:[10,6,1,""],DYNAMICS:[10,6,1,""],DecContext:[10,1,1,""],DeclarationsContext:[10,1,1,""],EFFECT:[10,6,1,""],ELIF:[10,6,1,""],ELSE:[10,6,1,""],EOF:[10,6,1,""],EQ_TO:[10,6,1,""],EXECUTE:[10,6,1,""],EffectContext:[10,1,1,""],Effect_referenceContext:[10,1,1,""],Effect_statementContext:[10,1,1,""],Effect_statement_collectionContext:[10,1,1,""],Effect_statement_conditionalContext:[10,1,1,""],Effect_statement_predictionContext:[10,1,1,""],Effect_statement_probabilisticContext:[10,1,1,""],Effect_statement_referenceContext:[10,1,1,""],Effect_statement_rewardContext:[10,1,1,""],ExecuteContext:[10,1,1,""],FACTOR:[10,6,1,""],FALSE:[10,6,1,""],FEATURE:[10,6,1,""],FNAME:[10,6,1,""],FactorContext:[10,1,1,""],FeatureContext:[10,1,1,""],GOAL:[10,6,1,""],GT:[10,6,1,""],GT_EQ:[10,6,1,""],GoalContext:[10,1,1,""],IDENTIFIER:[10,6,1,""],IF:[10,6,1,""],IMPORT:[10,6,1,""],IN:[10,6,1,""],INDENT:[10,6,1,""],INIT:[10,6,1,""],INTEGER:[10,6,1,""],Import_statContext:[10,1,1,""],ImportsContext:[10,1,1,""],Int_array_expContext:[10,1,1,""],Integer_fractionContext:[10,1,1,""],LT:[10,6,1,""],LT_EQ:[10,6,1,""],L_BRK:[10,6,1,""],L_PAR:[10,6,1,""],MAIN:[10,6,1,""],MARKOVFEATURE:[10,6,1,""],MINUS:[10,6,1,""],MINUS_EQ:[10,6,1,""],Markov_featureContext:[10,1,1,""],NEVER:[10,6,1,""],NL:[10,6,1,""],NOT:[10,6,1,""],NOT_EQ:[10,6,1,""],OPTION:[10,6,1,""],OR:[10,6,1,""],OptionContext:[10,1,1,""],Option_conditionContext:[10,1,1,""],P:[10,6,1,""],PLUS:[10,6,1,""],PLUS_EQ:[10,6,1,""],POLICY:[10,6,1,""],PREDICT:[10,6,1,""],PRIME:[10,6,1,""],PROPOSITION:[10,6,1,""],PolicyContext:[10,1,1,""],Policy_statementContext:[10,1,1,""],Policy_statement_conditionalContext:[10,1,1,""],Policy_statement_executeContext:[10,1,1,""],Policy_statement_probabilisticContext:[10,1,1,""],PredictionContext:[10,1,1,""],Probabilistic_conditionContext:[10,1,1,""],Probabilistic_effectContext:[10,1,1,""],Probabilistic_effect_statementContext:[10,1,1,""],Probabilistic_effect_statement_no_sugarContext:[10,1,1,""],Probabilistic_effect_statement_sugarContext:[10,1,1,""],Probabilistic_policy_statementContext:[10,1,1,""],Probabilistic_policy_statement_no_sugarContext:[10,1,1,""],Probabilistic_policy_statement_sugarContext:[10,1,1,""],Probabilistic_subpolicyContext:[10,1,1,""],ProgramContext:[10,1,1,""],PropositionContext:[10,1,1,""],REWARD:[10,6,1,""],RULE_action:[10,6,1,""],RULE_any_array:[10,6,1,""],RULE_any_bound_var:[10,6,1,""],RULE_any_decimal:[10,6,1,""],RULE_any_integer:[10,6,1,""],RULE_any_num_array_exp:[10,6,1,""],RULE_any_number:[10,6,1,""],RULE_arithmetic_exp:[10,6,1,""],RULE_boolean_exp:[10,6,1,""],RULE_compound_array_exp:[10,6,1,""],RULE_conditional_effect:[10,6,1,""],RULE_conditional_subpolicy:[10,6,1,""],RULE_constant:[10,6,1,""],RULE_dec:[10,6,1,""],RULE_declarations:[10,6,1,""],RULE_effect:[10,6,1,""],RULE_effect_reference:[10,6,1,""],RULE_effect_statement:[10,6,1,""],RULE_effect_statement_collection:[10,6,1,""],RULE_execute:[10,6,1,""],RULE_factor:[10,6,1,""],RULE_feature:[10,6,1,""],RULE_goal:[10,6,1,""],RULE_import_stat:[10,6,1,""],RULE_imports:[10,6,1,""],RULE_int_array_exp:[10,6,1,""],RULE_integer_fraction:[10,6,1,""],RULE_markov_feature:[10,6,1,""],RULE_option:[10,6,1,""],RULE_option_condition:[10,6,1,""],RULE_policy:[10,6,1,""],RULE_policy_statement:[10,6,1,""],RULE_prediction:[10,6,1,""],RULE_probabilistic_condition:[10,6,1,""],RULE_probabilistic_effect:[10,6,1,""],RULE_probabilistic_effect_statement:[10,6,1,""],RULE_probabilistic_policy_statement:[10,6,1,""],RULE_probabilistic_subpolicy:[10,6,1,""],RULE_program:[10,6,1,""],RULE_proposition:[10,6,1,""],RULE_reward:[10,6,1,""],RULE_slice_exp:[10,6,1,""],RULE_trailer:[10,6,1,""],R_BRK:[10,6,1,""],R_PAR:[10,6,1,""],RewardContext:[10,1,1,""],S:[10,6,1,""],SKIP_:[10,6,1,""],S_PRIME:[10,6,1,""],Slice_expContext:[10,1,1,""],THEN:[10,6,1,""],TIMES:[10,6,1,""],TIMES_EQ:[10,6,1,""],TRUE:[10,6,1,""],TrailerContext:[10,1,1,""],Trailer_arrayContext:[10,1,1,""],Trailer_sliceContext:[10,1,1,""],UNTIL:[10,6,1,""],WITH:[10,6,1,""],action:[10,3,1,""],any_array:[10,3,1,""],any_bound_var:[10,3,1,""],any_decimal:[10,3,1,""],any_integer:[10,3,1,""],any_num_array_exp:[10,3,1,""],any_number:[10,3,1,""],arithmetic_exp:[10,3,1,""],arithmetic_exp_sempred:[10,3,1,""],atn:[10,6,1,""],boolean_exp:[10,3,1,""],boolean_exp_sempred:[10,3,1,""],buildParseTrees:[10,6,1,""],compound_array_exp:[10,3,1,""],conditional_effect:[10,3,1,""],conditional_subpolicy:[10,3,1,""],constant:[10,3,1,""],dec:[10,3,1,""],decisionsToDFA:[10,6,1,""],declarations:[10,3,1,""],effect:[10,3,1,""],effect_reference:[10,3,1,""],effect_statement:[10,3,1,""],effect_statement_collection:[10,3,1,""],execute:[10,3,1,""],factor:[10,3,1,""],feature:[10,3,1,""],goal:[10,3,1,""],grammarFileName:[10,6,1,""],import_stat:[10,3,1,""],imports:[10,3,1,""],int_array_exp:[10,3,1,""],integer_fraction:[10,3,1,""],literalNames:[10,6,1,""],markov_feature:[10,3,1,""],option:[10,3,1,""],option_condition:[10,3,1,""],policy:[10,3,1,""],policy_statement:[10,3,1,""],prediction:[10,3,1,""],probabilistic_condition:[10,3,1,""],probabilistic_effect:[10,3,1,""],probabilistic_effect_statement:[10,3,1,""],probabilistic_policy_statement:[10,3,1,""],probabilistic_subpolicy:[10,3,1,""],program:[10,3,1,""],proposition:[10,3,1,""],reward:[10,3,1,""],ruleNames:[10,6,1,""],sempred:[10,3,1,""],sharedContextCache:[10,6,1,""],slice_exp:[10,3,1,""],symbolicNames:[10,6,1,""],trailer:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.ActionContext":{ACTION:[10,3,1,""],BIND:[10,3,1,""],IDENTIFIER:[10,3,1,""],any_num_array_exp:[10,3,1,""],any_number:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Any_arrayContext":{copyFrom:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Any_array_any_numContext":{any_num_array_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Any_array_compoundContext":{compound_array_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Any_bound_varContext":{copyFrom:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Any_decimalContext":{DECIMAL:[10,3,1,""],MINUS:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Any_integerContext":{INTEGER:[10,3,1,""],MINUS:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Any_num_array_expContext":{COM:[10,3,1,""],L_BRK:[10,3,1,""],R_BRK:[10,3,1,""],any_number:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Any_num_decContext":{any_decimal:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Any_num_intContext":{any_integer:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Any_numberContext":{copyFrom:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Arith_arrayContext":{any_array:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Arith_bound_varContext":{any_bound_var:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Arith_numberContext":{any_number:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Arith_parenContext":{L_PAR:[10,3,1,""],R_PAR:[10,3,1,""],arithmetic_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Arith_plus_minusContext":{MINUS:[10,3,1,""],PLUS:[10,3,1,""],arithmetic_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Arith_times_divideContext":{DIVIDE:[10,3,1,""],TIMES:[10,3,1,""],arithmetic_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Arithmetic_expContext":{copyFrom:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Bool_andContext":{AND:[10,3,1,""],boolean_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Bool_arith_eqContext":{EQ_TO:[10,3,1,""],GT:[10,3,1,""],GT_EQ:[10,3,1,""],LT:[10,3,1,""],LT_EQ:[10,3,1,""],NOT_EQ:[10,3,1,""],arithmetic_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Bool_bool_eqContext":{EQ_TO:[10,3,1,""],NOT_EQ:[10,3,1,""],boolean_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Bool_bound_varContext":{any_bound_var:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Bool_inContext":{IN:[10,3,1,""],arithmetic_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Bool_notContext":{NOT:[10,3,1,""],boolean_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Bool_orContext":{OR:[10,3,1,""],boolean_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Bool_parenContext":{L_PAR:[10,3,1,""],R_PAR:[10,3,1,""],boolean_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Bool_tfContext":{FALSE:[10,3,1,""],TRUE:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Boolean_expContext":{copyFrom:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Bound_actionContext":{A:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Bound_identifierContext":{IDENTIFIER:[10,3,1,""],PRIME:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""],trailer:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.Bound_next_stateContext":{S_PRIME:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""],trailer:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.Bound_stateContext":{S:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""],trailer:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.Compound_array_compoundContext":{COM:[10,3,1,""],L_BRK:[10,3,1,""],R_BRK:[10,3,1,""],compound_array_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Compound_array_expContext":{copyFrom:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Compound_array_simpleContext":{any_num_array_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Conditional_effectContext":{COL:[10,3,1,""],DEDENT:[10,3,1,""],ELIF:[10,3,1,""],ELSE:[10,3,1,""],IF:[10,3,1,""],INDENT:[10,3,1,""],boolean_exp:[10,3,1,""],effect_statement_collection:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Conditional_subpolicyContext":{COL:[10,3,1,""],DEDENT:[10,3,1,""],ELIF:[10,3,1,""],ELSE:[10,3,1,""],IF:[10,3,1,""],INDENT:[10,3,1,""],NL:[10,3,1,""],boolean_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""],policy_statement:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.ConstantContext":{BIND:[10,3,1,""],CONSTANT:[10,3,1,""],IDENTIFIER:[10,3,1,""],arithmetic_exp:[10,3,1,""],boolean_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.DecContext":{NL:[10,3,1,""],action:[10,3,1,""],constant:[10,3,1,""],effect:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],factor:[10,3,1,""],feature:[10,3,1,""],getRuleIndex:[10,3,1,""],goal:[10,3,1,""],markov_feature:[10,3,1,""],option:[10,3,1,""],parser:[10,6,1,""],policy:[10,3,1,""],proposition:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.DeclarationsContext":{dec:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.EffectContext":{COL:[10,3,1,""],DEDENT:[10,3,1,""],EFFECT:[10,3,1,""],IDENTIFIER:[10,3,1,""],INDENT:[10,3,1,""],MAIN:[10,3,1,""],effect_statement_collection:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Effect_referenceContext":{IDENTIFIER:[10,3,1,""],PREDICT:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Effect_statementContext":{copyFrom:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Effect_statement_collectionContext":{NL:[10,3,1,""],effect_statement:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Effect_statement_conditionalContext":{conditional_effect:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Effect_statement_predictionContext":{enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""],prediction:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.Effect_statement_probabilisticContext":{enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""],probabilistic_effect:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.Effect_statement_referenceContext":{effect_reference:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Effect_statement_rewardContext":{enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""],reward:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.ExecuteContext":{EXECUTE:[10,3,1,""],IDENTIFIER:[10,3,1,""],arithmetic_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.FactorContext":{BIND:[10,3,1,""],FACTOR:[10,3,1,""],IDENTIFIER:[10,3,1,""],any_bound_var:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.FeatureContext":{BIND:[10,3,1,""],FEATURE:[10,3,1,""],IDENTIFIER:[10,3,1,""],arithmetic_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.GoalContext":{BIND:[10,3,1,""],GOAL:[10,3,1,""],IDENTIFIER:[10,3,1,""],boolean_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Import_statContext":{FNAME:[10,3,1,""],IMPORT:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.ImportsContext":{NL:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],import_stat:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Int_array_expContext":{COM:[10,3,1,""],L_BRK:[10,3,1,""],R_BRK:[10,3,1,""],any_integer:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Integer_fractionContext":{DIVIDE:[10,3,1,""],any_integer:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Markov_featureContext":{BIND:[10,3,1,""],IDENTIFIER:[10,3,1,""],MARKOVFEATURE:[10,3,1,""],arithmetic_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.OptionContext":{COL:[10,3,1,""],DEDENT:[10,3,1,""],IDENTIFIER:[10,3,1,""],INDENT:[10,3,1,""],INIT:[10,3,1,""],NL:[10,3,1,""],OPTION:[10,3,1,""],UNTIL:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],option_condition:[10,3,1,""],parser:[10,6,1,""],policy_statement:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.Option_conditionContext":{ANY_CONDITION:[10,3,1,""],boolean_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.PolicyContext":{COL:[10,3,1,""],DEDENT:[10,3,1,""],IDENTIFIER:[10,3,1,""],INDENT:[10,3,1,""],MAIN:[10,3,1,""],NL:[10,3,1,""],POLICY:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""],policy_statement:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.Policy_statementContext":{copyFrom:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Policy_statement_conditionalContext":{conditional_subpolicy:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Policy_statement_executeContext":{enterRule:[10,3,1,""],execute:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Policy_statement_probabilisticContext":{enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""],probabilistic_subpolicy:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.PredictionContext":{IDENTIFIER:[10,3,1,""],PREDICT:[10,3,1,""],PRIME:[10,3,1,""],S_PRIME:[10,3,1,""],arithmetic_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Probabilistic_conditionContext":{L_PAR:[10,3,1,""],P:[10,3,1,""],R_PAR:[10,3,1,""],WITH:[10,3,1,""],any_number:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],integer_fraction:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Probabilistic_effectContext":{OR:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""],probabilistic_effect_statement:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.Probabilistic_effect_statementContext":{copyFrom:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Probabilistic_effect_statement_no_sugarContext":{COL:[10,3,1,""],DEDENT:[10,3,1,""],INDENT:[10,3,1,""],effect_statement_collection:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""],probabilistic_condition:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.Probabilistic_effect_statement_sugarContext":{NL:[10,3,1,""],effect_reference:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""],prediction:[10,3,1,""],probabilistic_condition:[10,3,1,""],reward:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.Probabilistic_policy_statementContext":{copyFrom:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Probabilistic_policy_statement_no_sugarContext":{COL:[10,3,1,""],DEDENT:[10,3,1,""],INDENT:[10,3,1,""],NL:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""],policy_statement:[10,3,1,""],probabilistic_condition:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.Probabilistic_policy_statement_sugarContext":{NL:[10,3,1,""],enterRule:[10,3,1,""],execute:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""],probabilistic_condition:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.Probabilistic_subpolicyContext":{OR:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""],probabilistic_policy_statement:[10,3,1,""]},"rlang.language.RLangParser.RLangParser.ProgramContext":{NL:[10,3,1,""],declarations:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],imports:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.PropositionContext":{BIND:[10,3,1,""],IDENTIFIER:[10,3,1,""],PROPOSITION:[10,3,1,""],boolean_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.RewardContext":{REWARD:[10,3,1,""],arithmetic_exp:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Slice_expContext":{COL:[10,3,1,""],L_BRK:[10,3,1,""],R_BRK:[10,3,1,""],any_integer:[10,3,1,""],enterRule:[10,3,1,""],exitRule:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.TrailerContext":{copyFrom:[10,3,1,""],getRuleIndex:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Trailer_arrayContext":{enterRule:[10,3,1,""],exitRule:[10,3,1,""],int_array_exp:[10,3,1,""],parser:[10,6,1,""]},"rlang.language.RLangParser.RLangParser.Trailer_sliceContext":{enterRule:[10,3,1,""],exitRule:[10,3,1,""],parser:[10,6,1,""],slice_exp:[10,3,1,""]},"rlang.language.RLangParserListener":{RLangParserListener:[10,1,1,""]},"rlang.language.RLangParserListener.RLangParserListener":{enterAction:[10,3,1,""],enterAny_array_any_num:[10,3,1,""],enterAny_array_compound:[10,3,1,""],enterAny_decimal:[10,3,1,""],enterAny_integer:[10,3,1,""],enterAny_num_array_exp:[10,3,1,""],enterAny_num_dec:[10,3,1,""],enterAny_num_int:[10,3,1,""],enterArith_array:[10,3,1,""],enterArith_bound_var:[10,3,1,""],enterArith_number:[10,3,1,""],enterArith_paren:[10,3,1,""],enterArith_plus_minus:[10,3,1,""],enterArith_times_divide:[10,3,1,""],enterBool_and:[10,3,1,""],enterBool_arith_eq:[10,3,1,""],enterBool_bool_eq:[10,3,1,""],enterBool_bound_var:[10,3,1,""],enterBool_in:[10,3,1,""],enterBool_not:[10,3,1,""],enterBool_or:[10,3,1,""],enterBool_paren:[10,3,1,""],enterBool_tf:[10,3,1,""],enterBound_action:[10,3,1,""],enterBound_identifier:[10,3,1,""],enterBound_next_state:[10,3,1,""],enterBound_state:[10,3,1,""],enterCompound_array_compound:[10,3,1,""],enterCompound_array_simple:[10,3,1,""],enterConditional_effect:[10,3,1,""],enterConditional_subpolicy:[10,3,1,""],enterConstant:[10,3,1,""],enterDec:[10,3,1,""],enterDeclarations:[10,3,1,""],enterEffect:[10,3,1,""],enterEffect_reference:[10,3,1,""],enterEffect_statement_collection:[10,3,1,""],enterEffect_statement_conditional:[10,3,1,""],enterEffect_statement_prediction:[10,3,1,""],enterEffect_statement_probabilistic:[10,3,1,""],enterEffect_statement_reference:[10,3,1,""],enterEffect_statement_reward:[10,3,1,""],enterExecute:[10,3,1,""],enterFactor:[10,3,1,""],enterFeature:[10,3,1,""],enterGoal:[10,3,1,""],enterImport_stat:[10,3,1,""],enterImports:[10,3,1,""],enterInt_array_exp:[10,3,1,""],enterInteger_fraction:[10,3,1,""],enterMarkov_feature:[10,3,1,""],enterOption:[10,3,1,""],enterOption_condition:[10,3,1,""],enterPolicy:[10,3,1,""],enterPolicy_statement_conditional:[10,3,1,""],enterPolicy_statement_execute:[10,3,1,""],enterPolicy_statement_probabilistic:[10,3,1,""],enterPrediction:[10,3,1,""],enterProbabilistic_condition:[10,3,1,""],enterProbabilistic_effect:[10,3,1,""],enterProbabilistic_effect_statement_no_sugar:[10,3,1,""],enterProbabilistic_effect_statement_sugar:[10,3,1,""],enterProbabilistic_policy_statement_no_sugar:[10,3,1,""],enterProbabilistic_policy_statement_sugar:[10,3,1,""],enterProbabilistic_subpolicy:[10,3,1,""],enterProgram:[10,3,1,""],enterProposition:[10,3,1,""],enterReward:[10,3,1,""],enterSlice_exp:[10,3,1,""],enterTrailer_array:[10,3,1,""],enterTrailer_slice:[10,3,1,""],exitAction:[10,3,1,""],exitAny_array_any_num:[10,3,1,""],exitAny_array_compound:[10,3,1,""],exitAny_decimal:[10,3,1,""],exitAny_integer:[10,3,1,""],exitAny_num_array_exp:[10,3,1,""],exitAny_num_dec:[10,3,1,""],exitAny_num_int:[10,3,1,""],exitArith_array:[10,3,1,""],exitArith_bound_var:[10,3,1,""],exitArith_number:[10,3,1,""],exitArith_paren:[10,3,1,""],exitArith_plus_minus:[10,3,1,""],exitArith_times_divide:[10,3,1,""],exitBool_and:[10,3,1,""],exitBool_arith_eq:[10,3,1,""],exitBool_bool_eq:[10,3,1,""],exitBool_bound_var:[10,3,1,""],exitBool_in:[10,3,1,""],exitBool_not:[10,3,1,""],exitBool_or:[10,3,1,""],exitBool_paren:[10,3,1,""],exitBool_tf:[10,3,1,""],exitBound_action:[10,3,1,""],exitBound_identifier:[10,3,1,""],exitBound_next_state:[10,3,1,""],exitBound_state:[10,3,1,""],exitCompound_array_compound:[10,3,1,""],exitCompound_array_simple:[10,3,1,""],exitConditional_effect:[10,3,1,""],exitConditional_subpolicy:[10,3,1,""],exitConstant:[10,3,1,""],exitDec:[10,3,1,""],exitDeclarations:[10,3,1,""],exitEffect:[10,3,1,""],exitEffect_reference:[10,3,1,""],exitEffect_statement_collection:[10,3,1,""],exitEffect_statement_conditional:[10,3,1,""],exitEffect_statement_prediction:[10,3,1,""],exitEffect_statement_probabilistic:[10,3,1,""],exitEffect_statement_reference:[10,3,1,""],exitEffect_statement_reward:[10,3,1,""],exitExecute:[10,3,1,""],exitFactor:[10,3,1,""],exitFeature:[10,3,1,""],exitGoal:[10,3,1,""],exitImport_stat:[10,3,1,""],exitImports:[10,3,1,""],exitInt_array_exp:[10,3,1,""],exitInteger_fraction:[10,3,1,""],exitMarkov_feature:[10,3,1,""],exitOption:[10,3,1,""],exitOption_condition:[10,3,1,""],exitPolicy:[10,3,1,""],exitPolicy_statement_conditional:[10,3,1,""],exitPolicy_statement_execute:[10,3,1,""],exitPolicy_statement_probabilistic:[10,3,1,""],exitPrediction:[10,3,1,""],exitProbabilistic_condition:[10,3,1,""],exitProbabilistic_effect:[10,3,1,""],exitProbabilistic_effect_statement_no_sugar:[10,3,1,""],exitProbabilistic_effect_statement_sugar:[10,3,1,""],exitProbabilistic_policy_statement_no_sugar:[10,3,1,""],exitProbabilistic_policy_statement_sugar:[10,3,1,""],exitProbabilistic_subpolicy:[10,3,1,""],exitProgram:[10,3,1,""],exitProposition:[10,3,1,""],exitReward:[10,3,1,""],exitSlice_exp:[10,3,1,""],exitTrailer_array:[10,3,1,""],exitTrailer_slice:[10,3,1,""]},"rlang.language.utils":{language_exceptions:[11,0,0,"-"],semantic_schemas:[11,0,0,"-"],vocabulary_assembler:[11,0,0,"-"]},"rlang.language.utils.language_exceptions":{AlreadyBoundError:[11,5,1,""],RLangParseCancellationException:[11,5,1,""],RLangSemanticError:[11,5,1,""],UnknownVariableError:[11,5,1,""]},"rlang.language.utils.semantic_schemas":{conditional_policy_function:[11,2,1,""],conditional_prediction_function:[11,2,1,""],conditional_reward_function:[11,2,1,""],conditional_transition_function:[11,2,1,""],effect_transition_dict_function:[11,2,1,""],policy_generator_function:[11,2,1,""]},"rlang.language.utils.vocabulary_assembler":{VocabularyAssembler:[11,1,1,""]},"rlang.language.utils.vocabulary_assembler.VocabularyAssembler":{import_lmdp_objects:[11,3,1,""],import_modules:[11,3,1,""],retrieve_state_size:[11,3,1,""]},rlang:{agents:[7,0,0,"-"],core:[6,0,0,"-"],grounding:[8,0,0,"-"],knowledge:[6,0,0,"-"],language:[10,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","property","Python property"],"5":["py","exception","Python exception"],"6":["py","attribute","Python attribute"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:property","5":"py:exception","6":"py:attribute"},terms:{"0":[7,8,10,12],"1":[4,6,7,8,9,10,12],"10":10,"11":[9,10],"12":10,"13":[9,10],"14":10,"15":[9,10],"16":10,"17":[9,10],"18":10,"19":[9,10],"2":[4,9,10],"20":10,"2022":2,"21":10,"22":10,"23":10,"24":10,"25":10,"26":10,"27":10,"28":10,"29":10,"3":[9,10],"30":[9,10],"31":10,"32":10,"33":10,"34":10,"35":10,"36":10,"37":10,"38":10,"39":10,"4":[9,10],"40":10,"41":10,"42":10,"43":10,"44":10,"45":10,"46":10,"47":10,"48":10,"49":10,"5":[9,10],"50":10,"51":10,"52":10,"53":10,"54":10,"55":10,"56":10,"57":10,"58":10,"59":10,"6":[9,10],"60":10,"61":10,"62":10,"63":10,"64":10,"65":10,"66":10,"67":10,"7":[9,10],"8":10,"9":10,"99":7,"boolean":9,"class":[6,7,8,9,10,11],"default":8,"enum":9,"final":[],"float":8,"function":[6,8,11],"import":[4,9,10],"int":10,"return":[6,8,10],"true":[8,10],"try":[],A:[4,6,8,10,12],AND:10,IF:10,IN:10,In:12,NOT:[8,10],OR:10,Or:12,THEN:10,The:[2,12],These:[4,11],To:[2,4],WITH:10,_io:10,_p:10,abc:[6,8],about:12,act:6,action:[4,6,7,8,9,10,12],action_spac:9,actioncontext:10,actiondistribut:8,actionrefer:8,actual:8,addit:9,addvari:10,adher:[],agent:[2,5,6,12],all:[6,8],alpha:7,alreadybounderror:11,an:[2,6,8,9,12],ani:[8,9,10],anneal:7,anoth:8,antlr4:[10,11],antlr_dent:10,any_arrai:10,any_array_any_numcontext:10,any_array_compoundcontext:10,any_arraycontext:10,any_bound_var:10,any_bound_varcontext:10,any_char:10,any_condit:10,any_decim:10,any_decimalcontext:10,any_integ:10,any_integercontext:10,any_num_array_exp:10,any_num_array_expcontext:10,any_num_deccontext:10,any_num_intcontext:10,any_numb:10,any_numbercontext:10,append:8,ar:[8,11],arg:[6,8,11],argument:8,arith_arraycontext:10,arith_bound_varcontext:10,arith_numbercontext:10,arith_parencontext:10,arith_plus_minuscontext:10,arith_times_dividecontext:10,arithmetic_exp:10,arithmetic_exp_sempr:10,arithmetic_expcontext:10,arrai:[4,9],as_tupl:9,assign:10,atn:10,automat:9,base:[2,4,6,7,8,9,10,11,12],batch:9,batchabl:9,bind:10,bool:8,bool_andcontext:10,bool_arith_eqcontext:10,bool_bool_eqcontext:10,bool_bound_varcontext:10,bool_incontext:10,bool_notcontext:10,bool_orcontext:10,bool_parencontext:10,bool_tfcontext:10,boolean_exp:10,boolean_exp_sempr:10,boolean_expcontext:10,bound_actioncontext:10,bound_identifiercontext:10,bound_next_statecontext:10,bound_statecontext:10,bufferedtokenstream:10,buildparsetre:10,calculate_domain:8,calculate_true_distribut:8,callabl:8,can:[4,6,8,9,12],can_initi:8,captur:8,care:9,channelnam:10,classmethod:[8,9],close:8,codomain:[8,9],col:10,collect:[6,8],column:10,com:10,combin:9,comment:10,commontoken:10,compon:[],compose_prob:8,compound_array_compoundcontext:10,compound_array_exp:10,compound_array_expcontext:10,compound_array_simplecontext:10,conditional_effect:10,conditional_effectcontext:10,conditional_policy_funct:11,conditional_prediction_funct:11,conditional_reward_funct:11,conditional_subpolici:10,conditional_subpolicycontext:10,conditional_transition_funct:11,consist:4,constant:[8,10],constantcontext:10,constantground:8,construct:11,contain:[6,8],content:[1,5],control:12,copyfrom:10,core:[4,5],ctx:10,current:[2,4],cycl:12,dec:10,deccontext:10,decim:10,decis:12,decisionstodfa:10,declar:[4,10],declarationscontext:10,dedent:10,dedent_token:10,default_mod:10,default_q:7,default_token_channel:10,defaulterrorstrategi:10,defin:[4,8],denter:10,denterhelp:10,describ:[2,4],determin:8,dfa:10,diagram:12,dict:6,dictionari:[6,8],digit:10,distribut:8,distribution_list:8,div_eq:10,divid:10,doc:[],document:4,doe:8,domain:[8,9,12],door_clos:8,down:12,dure:11,dynam:[10,12],e:[8,10,11],easi:[],easili:9,effect:[6,8,10,11,12],effect_refer:10,effect_referencecontext:10,effect_stat:10,effect_statement_collect:10,effect_statement_collectioncontext:10,effect_statement_conditionalcontext:10,effect_statement_predictioncontext:10,effect_statement_probabilisticcontext:10,effect_statement_referencecontext:10,effect_statement_rewardcontext:10,effect_statementcontext:10,effect_transition_dict_funct:11,effectcontext:10,elevator_movement_effect:12,elif:[10,12],elif_condit:11,elif_predict:11,elif_reward:11,elif_subpolici:11,elif_transit:11,els:10,else_predict:11,else_reward:11,else_subpolici:11,else_transit:11,enabl:2,encod:10,enteract:10,enterany_array_any_num:10,enterany_array_compound:10,enterany_decim:10,enterany_integ:10,enterany_num_array_exp:10,enterany_num_dec:10,enterany_num_int:10,enterarith_arrai:10,enterarith_bound_var:10,enterarith_numb:10,enterarith_paren:10,enterarith_plus_minu:10,enterarith_times_divid:10,enterbool_and:10,enterbool_arith_eq:10,enterbool_bool_eq:10,enterbool_bound_var:10,enterbool_in:10,enterbool_not:10,enterbool_or:10,enterbool_paren:10,enterbool_tf:10,enterbound_act:10,enterbound_identifi:10,enterbound_next_st:10,enterbound_st:10,entercompound_array_compound:10,entercompound_array_simpl:10,enterconditional_effect:10,enterconditional_subpolici:10,enterconst:10,enterdec:10,enterdeclar:10,entereffect:10,entereffect_refer:10,entereffect_statement_collect:10,entereffect_statement_condit:10,entereffect_statement_predict:10,entereffect_statement_probabilist:10,entereffect_statement_refer:10,entereffect_statement_reward:10,enterexecut:10,enterfactor:10,enterfeatur:10,entergo:10,enterimport:10,enterimport_stat:10,enterint_array_exp:10,enterinteger_fract:10,entermarkov_featur:10,enteropt:10,enteroption_condit:10,enterpolici:10,enterpolicy_statement_condit:10,enterpolicy_statement_execut:10,enterpolicy_statement_probabilist:10,enterpredict:10,enterprobabilistic_condit:10,enterprobabilistic_effect:10,enterprobabilistic_effect_statement_no_sugar:10,enterprobabilistic_effect_statement_sugar:10,enterprobabilistic_policy_statement_no_sugar:10,enterprobabilistic_policy_statement_sugar:10,enterprobabilistic_subpolici:10,enterprogram:10,enterproposit:10,enterreward:10,enterrul:10,enterslice_exp:10,entertrailer_arrai:10,entertrailer_slic:10,environ:12,eof:10,epsilon:7,eq_to:10,equal:8,error:[10,11],errorlisten:10,errorstrategi:10,evalu:8,eventu:3,exampl:[6,9],except:[9,11],execut:[8,10],executecontext:10,exitact:10,exitany_array_any_num:10,exitany_array_compound:10,exitany_decim:10,exitany_integ:10,exitany_num_array_exp:10,exitany_num_dec:10,exitany_num_int:10,exitarith_arrai:10,exitarith_bound_var:10,exitarith_numb:10,exitarith_paren:10,exitarith_plus_minu:10,exitarith_times_divid:10,exitbool_and:10,exitbool_arith_eq:10,exitbool_bool_eq:10,exitbool_bound_var:10,exitbool_in:10,exitbool_not:10,exitbool_or:10,exitbool_paren:10,exitbool_tf:10,exitbound_act:10,exitbound_identifi:10,exitbound_next_st:10,exitbound_st:10,exitcompound_array_compound:10,exitcompound_array_simpl:10,exitconditional_effect:10,exitconditional_subpolici:10,exitconst:10,exitdec:10,exitdeclar:10,exiteffect:10,exiteffect_refer:10,exiteffect_statement_collect:10,exiteffect_statement_condit:10,exiteffect_statement_predict:10,exiteffect_statement_probabilist:10,exiteffect_statement_refer:10,exiteffect_statement_reward:10,exitexecut:10,exitfactor:10,exitfeatur:10,exitgo:10,exitimport:10,exitimport_stat:10,exitint_array_exp:10,exitinteger_fract:10,exitmarkov_featur:10,exitopt:10,exitoption_condit:10,exitpolici:10,exitpolicy_statement_condit:10,exitpolicy_statement_execut:10,exitpolicy_statement_probabilist:10,exitpredict:10,exitprobabilistic_condit:10,exitprobabilistic_effect:10,exitprobabilistic_effect_statement_no_sugar:10,exitprobabilistic_effect_statement_sugar:10,exitprobabilistic_policy_statement_no_sugar:10,exitprobabilistic_policy_statement_sugar:10,exitprobabilistic_subpolici:10,exitprogram:10,exitproposit:10,exitreward:10,exitrul:10,exitslice_exp:10,exittrailer_arrai:10,exittrailer_slic:10,expect:8,explor:7,express:8,extend:8,factor:[6,8,10,12],factor_st:9,factorcontext:10,fals:[7,8,10],featur:[6,8,10,12],featurecontext:10,file:6,filenam:6,fill:[2,3,4],first:12,fit:12,flesh:12,floor:12,fname:10,follow:[],form:8,from:8,from_action_distribut:8,from_factor:8,from_grounding_distribut:8,from_list_eq:8,from_nam:9,from_primitiveground:8,from_reward_distribut:8,from_singl:8,from_state_act:9,from_state_distribut:8,full:12,g4:10,g:8,gamma:7,gener:[],getruleindex:10,given:8,goal:[8,10],goalcontext:10,grammarfilenam:10,ground:[2,5,6],grounding_except:[1,6,8],grounding_typ:6,groundingdistribut:8,groundingfunct:[6,8],gt:10,gt_eq:10,gym:9,ha:8,have:8,here:[2,12],hidden:10,hint:7,how:12,i:[8,10],icml:2,identifi:10,identityground:8,if_condit:11,if_predict:11,if_reward:11,if_subpolici:11,if_transit:11,iff:8,ignore_eof:10,imagin:12,implement:7,import_lmdp_object:11,import_modul:11,import_stat:10,import_statcontext:10,importscontext:10,includ:[],indent:10,indent_token:10,index:8,indic:8,inform:12,init:10,initi:8,input:10,input_arrai:9,inspir:[],instal:2,int_array_exp:10,int_array_expcontext:10,integ:10,integer_fract:10,integer_fractioncontext:10,intro:2,invalid:10,inventori:4,invok:8,invokingst:10,join:8,just:6,k:8,keyword:8,knowledg:[5,7],ks:8,kwarg:[6,8,11],l_brk:10,l_par:10,languag:[2,5,6,12],language_except:[6,10],language_refer:[],learn:[2,7],let:12,letter:10,lexer:10,like:[4,6,9],limit:8,line:10,list:[8,9,12],listen:[10,11],literalnam:10,ll:12,localctx:10,look:12,loop:8,lt:10,lt_eq:10,main:[10,12],mainli:4,make:12,markov_featur:10,markov_featurecontext:10,markovfeatur:[8,10],mdp:[9,12],mdp_metadata:6,mdpmetadata:[6,9],messag:9,minu:10,minus_eq:10,mode:10,modenam:10,modul:5,movement_effect:[],msg:[10,11],much:[],must:[],mutablemap:[6,8],name:[7,8,9,10],ndarrai:9,never:10,new_distribut:8,next:[4,6,8],next_stat:[6,8,9],nexttoken:10,nl:10,nl_token:10,none:[6,8,10,11],not_eq:10,numpi:9,object:[2,6,8,9,10,11,12],occur:8,offendingsymbol:10,offici:2,oldgroundingfunct:9,open:8,oper:9,option:[6,8,10,11,12],option_condit:10,option_conditioncontext:10,optioncontext:10,optiontermin:8,other:[8,9],out:[2,3,4,12],output:[8,10],overview:2,p:10,packag:[1,2,5],page:4,paramet:[6,8,9],parent:[8,10],pars:6,parse_fil:6,parsecancellationexcept:11,parser:10,parserrulecontext:10,parsetreelisten:10,parsevocabfil:10,part:2,partial:6,plan:8,plu:10,plus_eq:10,polici:[6,8,10,12],policy_generator_funct:11,policy_stat:10,policy_statement_conditionalcontext:10,policy_statement_executecontext:10,policy_statement_probabilisticcontext:10,policy_statementcontext:10,policycontext:10,policyold:[8,11],portion:4,posit:[],possibl:8,predict:[6,8,10],prediction_dict:8,predictioncontext:10,predictioncontextcach:10,predindex:10,prime:10,primit:[1,6,8],primitive_ground:8,primitiveground:8,prior_knowledg:[6,10],probabilistic_condit:10,probabilistic_conditioncontext:10,probabilistic_effect:10,probabilistic_effect_stat:10,probabilistic_effect_statement_no_sugarcontext:10,probabilistic_effect_statement_sugarcontext:10,probabilistic_effect_statementcontext:10,probabilistic_effectcontext:10,probabilistic_policy_stat:10,probabilistic_policy_statement_no_sugarcontext:10,probabilistic_policy_statement_sugarcontext:10,probabilistic_policy_statementcontext:10,probabilistic_reward:[],probabilistic_subpolici:10,probabilistic_subpolicycontext:10,probabilisticfunct:8,probabilitydistribut:8,probabl:8,program:[10,12],programcontext:10,properti:8,proposit:[6,8,10],propositioncontext:10,provid:[8,12],pull_token:10,python:[2,4,6,12],q:7,qlearningag:7,qlearningagentclass:7,r_brk:10,r_par:10,rather:12,readabl:[],real:9,real_valu:9,recogn:10,recoverinlin:10,refer:[2,8,12],regard:12,reinforc:2,repres:[4,8,9],requir:8,reset:8,restrict:8,retrieve_state_s:11,retrievevari:10,reward:[6,8,9,10],reward_funct:[6,8],rewardcontext:10,rewarddistribut:8,rewardfunct:[6,8],rlang:12,rlang_fnam:6,rlang_variables_of_typ:6,rlangerrorlisten:[5,6],rlangerrorstrategi:[5,6],rlanggroundingerror:9,rlangknowledg:[6,10],rlanglex:[5,6],rlanglisten:[5,6],rlangpars:[5,6],rlangparsecancellationexcept:11,rlangparserlisten:[5,6],rlangqlearningag:7,rlangqlearningagentclass:[5,6],rlangsemanticerror:11,rule_act:10,rule_any_arrai:10,rule_any_bound_var:10,rule_any_decim:10,rule_any_integ:10,rule_any_num_array_exp:10,rule_any_numb:10,rule_arithmetic_exp:10,rule_boolean_exp:10,rule_compound_array_exp:10,rule_conditional_effect:10,rule_conditional_subpolici:10,rule_const:10,rule_dec:10,rule_declar:10,rule_effect:10,rule_effect_refer:10,rule_effect_stat:10,rule_effect_statement_collect:10,rule_execut:10,rule_factor:10,rule_featur:10,rule_go:10,rule_import:10,rule_import_stat:10,rule_int_array_exp:10,rule_integer_fract:10,rule_markov_featur:10,rule_opt:10,rule_option_condit:10,rule_polici:10,rule_policy_stat:10,rule_predict:10,rule_probabilistic_condit:10,rule_probabilistic_effect:10,rule_probabilistic_effect_stat:10,rule_probabilistic_policy_stat:10,rule_probabilistic_subpolici:10,rule_program:10,rule_proposit:10,rule_reward:10,rule_slice_exp:10,rule_trail:10,rulecontext:10,ruleindex:10,rulenam:10,s1:9,s2:9,s:[2,4,8,10,12],s_prime:10,sampl:8,schema:[],scope:[],section:3,seen:12,semant:[2,4],semantic_schema:[6,10],sempr:10,seri:[],serializedatn:10,set:[8,9],shallow_copi:8,sharedcontextcach:10,should:9,similar:[],simpl:12,simple_rl:7,simpledent:10,skip_:10,slice:[4,8],slice_exp:10,slice_expcontext:10,sourc:[6,7,8,9,10,11],space:[4,8,9,10],specif:[6,12],specifi:[8,12],start:2,state:[4,6,7,8,9,12],state_act:[8,9],state_action_next_st:9,state_index:8,state_next_st:9,state_spac:9,state_valu:9,statedistribut:8,statement:11,stdout:10,stochast:8,str:[6,8,9,11],string:6,structur:[],submiss:2,submodul:[1,5],subpackag:[1,5],suit:[],symbolicnam:10,sync:10,syntax:2,syntaxerror:10,take:9,target:[],termin:8,textio:10,textiowrapp:10,thei:8,thi:[2,3,4,8,9,12],time:10,times_eq:10,toi:12,tokenstream:10,trailer:10,trailer_arraycontext:10,trailer_slicecontext:10,trailercontext:10,transit:[6,8,11,12],transition_funct:[6,8],transitionfunct:[6,8],tree:10,truth:8,try1_stmt:[],try2_stmt:[],tutori:2,two:[],type:[6,8,10],typic:12,unbatched_eq:9,under:2,uniform:7,union:8,unknownvariableerror:11,until:10,unwrap:9,up:12,update_metadata:8,us:[4,8,9,11,12],use_transit:7,utf:10,util:[1,6,7,8,10],valu:[8,9],valuefunct:8,variabl:10,variable_nam:[10,11],vocab_json:11,vocabulari:[],vocabulary_assembl:[6,10],vocabularyassembl:11,w:10,we:[8,12],whether:8,which:[2,6,7,8],whom:8,work:8,x_locat:6,x_posit:4,y_posit:[],yet:8,you:12},titles:["RLang-enabled Agents","RLang Grounding Reference","RLang 1.0.0 Documentation","Installation","RLang Language Reference","rlang","rlang package","rlang.agents package","rlang.grounding package","rlang.grounding.utils package","rlang.language package","rlang.language.utils package","Intro / Tutorial"],titleterms:{"0":2,"1":2,agent:[0,7],an:4,content:[6,7,8,9,10,11],core:6,definit:4,document:2,elev:12,enabl:0,factor:4,format:4,ground:[1,8,9],grounding_except:9,instal:3,intro:12,keyword:4,knowledg:6,languag:[4,10,11],language_except:11,modul:[1,6,7,8,9,10,11],object:4,packag:[6,7,8,9,10,11],primit:9,program:4,refer:[1,4],reserv:4,rlang:[0,1,2,4,5,6,7,8,9,10,11],rlangerrorlisten:10,rlangerrorstrategi:10,rlanglex:10,rlanglisten:10,rlangpars:10,rlangparserlisten:10,rlangqlearningagentclass:7,semantic_schema:11,submodul:[6,7,8,9,10,11],subpackag:[6,8,10],syntax:4,tutori:12,util:[9,11],vocabulary_assembl:11}})