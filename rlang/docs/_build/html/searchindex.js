Search.setIndex({docnames:["index","source/language","source/lmdp","source/lmdp.grounding","source/lmdp.grounding.actions","source/lmdp.grounding.booleans","source/lmdp.grounding.expressions","source/lmdp.grounding.real","source/lmdp.grounding.rewards","source/lmdp.grounding.states","source/lmdp.grounding.transitions","source/lmdp.utils","source/modules"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":4,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":3,"sphinx.domains.rst":2,"sphinx.domains.std":2,sphinx:56},filenames:["index.rst","source/language.rst","source/lmdp.rst","source/lmdp.grounding.rst","source/lmdp.grounding.actions.rst","source/lmdp.grounding.booleans.rst","source/lmdp.grounding.expressions.rst","source/lmdp.grounding.real.rst","source/lmdp.grounding.rewards.rst","source/lmdp.grounding.states.rst","source/lmdp.grounding.transitions.rst","source/lmdp.utils.rst","source/modules.rst"],objects:{"":{language:[1,0,0,"-"],lmdp:[2,0,0,"-"]},"language.Exceptions":{AlreadyBoundError:[1,1,1,""],RLangParseCancellationException:[1,1,1,""],RLangSemanticError:[1,1,1,""],UnknownVariableError:[1,1,1,""]},"language.RLangErrorListener":{RLangErrorListener:[1,2,1,""]},"language.RLangErrorListener.RLangErrorListener":{syntaxError:[1,3,1,""]},"language.RLangErrorStrategy":{RLangErrorStrategy:[1,2,1,""]},"language.RLangErrorStrategy.RLangErrorStrategy":{recoverInline:[1,3,1,""],sync:[1,3,1,""]},"language.RLangLexer":{RLangLexer:[1,2,1,""],serializedATN:[1,5,1,""]},"language.RLangLexer.RLangLexer":{A:[1,4,1,""],ACTION:[1,4,1,""],AND:[1,4,1,""],ANY:[1,4,1,""],ASSIGN:[1,4,1,""],BIND:[1,4,1,""],COL:[1,4,1,""],COM:[1,4,1,""],CONSTANT:[1,4,1,""],DECIMAL:[1,4,1,""],DEDENT:[1,4,1,""],DIVIDE:[1,4,1,""],DIV_EQ:[1,4,1,""],EFFECT:[1,4,1,""],ELIF:[1,4,1,""],ELSE:[1,4,1,""],EQ_TO:[1,4,1,""],EXECUTE:[1,4,1,""],FACTOR:[1,4,1,""],FALSE:[1,4,1,""],FEATURE:[1,4,1,""],FNAME:[1,4,1,""],GOAL:[1,4,1,""],GT:[1,4,1,""],GT_EQ:[1,4,1,""],IDENTIFIER:[1,4,1,""],IF:[1,4,1,""],IMPORT:[1,4,1,""],IN:[1,4,1,""],INDENT:[1,4,1,""],INIT:[1,4,1,""],INTEGER:[1,4,1,""],LT:[1,4,1,""],LT_EQ:[1,4,1,""],L_BRK:[1,4,1,""],L_PAR:[1,4,1,""],MARKOVFEATURE:[1,4,1,""],MINUS:[1,4,1,""],MINUS_EQ:[1,4,1,""],NL:[1,4,1,""],NOT:[1,4,1,""],NOT_EQ:[1,4,1,""],OPTION:[1,4,1,""],OR:[1,4,1,""],PLUS:[1,4,1,""],PLUS_EQ:[1,4,1,""],POLICY:[1,4,1,""],PREDICATE:[1,4,1,""],REWARD:[1,4,1,""],R_BRK:[1,4,1,""],R_PAR:[1,4,1,""],S:[1,4,1,""],SKIP_:[1,4,1,""],S_PRIME:[1,4,1,""],SimpleDenter:[1,2,1,""],TIMES:[1,4,1,""],TIMES_EQ:[1,4,1,""],TRUE:[1,4,1,""],UNTIL:[1,4,1,""],atn:[1,4,1,""],channelNames:[1,4,1,""],decisionsToDFA:[1,4,1,""],denter:[1,4,1,""],grammarFileName:[1,4,1,""],literalNames:[1,4,1,""],modeNames:[1,4,1,""],nextToken:[1,3,1,""],ruleNames:[1,4,1,""],symbolicNames:[1,4,1,""]},"language.RLangLexer.RLangLexer.SimpleDenter":{pull_token:[1,3,1,""]},"language.RLangListener":{RLangListener:[1,2,1,""]},"language.RLangListener.RLangListener":{addVariable:[1,3,1,""],enterAny_decimal:[1,3,1,""],enterAny_integer:[1,3,1,""],enterImport_stat:[1,3,1,""],exitAction:[1,3,1,""],exitAny_bound_var:[1,3,1,""],exitAny_num_dec:[1,3,1,""],exitAny_num_int:[1,3,1,""],exitArith_bound_var:[1,3,1,""],exitArith_number:[1,3,1,""],exitArith_paren:[1,3,1,""],exitArith_plus_minus:[1,3,1,""],exitArith_times_divide:[1,3,1,""],exitArray_exp:[1,3,1,""],exitBool_and:[1,3,1,""],exitBool_arith_eq:[1,3,1,""],exitBool_bool_eq:[1,3,1,""],exitBool_bound_var:[1,3,1,""],exitBool_in:[1,3,1,""],exitBool_not:[1,3,1,""],exitBool_or:[1,3,1,""],exitBool_paren:[1,3,1,""],exitBool_tf:[1,3,1,""],exitFactor:[1,3,1,""],exitFeature:[1,3,1,""],exitImports:[1,3,1,""],exitIndex_exp:[1,3,1,""],exitPredicate:[1,3,1,""],exitSlice_exp:[1,3,1,""],exitTrailer_index:[1,3,1,""],exitTrailer_slice:[1,3,1,""],parseVocabFiles:[1,3,1,""],retrieveVariable:[1,3,1,""]},"language.RLangParser":{RLangParser:[1,2,1,""],serializedATN:[1,5,1,""]},"language.RLangParser.RLangParser":{A:[1,4,1,""],ACTION:[1,4,1,""],AND:[1,4,1,""],ANY:[1,4,1,""],ASSIGN:[1,4,1,""],ActionContext:[1,2,1,""],Any_bound_varContext:[1,2,1,""],Any_decimalContext:[1,2,1,""],Any_integerContext:[1,2,1,""],Any_num_decContext:[1,2,1,""],Any_num_intContext:[1,2,1,""],Any_numberContext:[1,2,1,""],Arith_bound_varContext:[1,2,1,""],Arith_numberContext:[1,2,1,""],Arith_parenContext:[1,2,1,""],Arith_plus_minusContext:[1,2,1,""],Arith_times_divideContext:[1,2,1,""],Arithmetic_expContext:[1,2,1,""],Array_expContext:[1,2,1,""],AssignmentContext:[1,2,1,""],BIND:[1,4,1,""],Bool_andContext:[1,2,1,""],Bool_arith_eqContext:[1,2,1,""],Bool_bool_eqContext:[1,2,1,""],Bool_bound_varContext:[1,2,1,""],Bool_inContext:[1,2,1,""],Bool_notContext:[1,2,1,""],Bool_orContext:[1,2,1,""],Bool_parenContext:[1,2,1,""],Bool_tfContext:[1,2,1,""],Boolean_expContext:[1,2,1,""],COL:[1,4,1,""],COM:[1,4,1,""],CONSTANT:[1,4,1,""],ConstantContext:[1,2,1,""],DECIMAL:[1,4,1,""],DEDENT:[1,4,1,""],DIVIDE:[1,4,1,""],DIV_EQ:[1,4,1,""],DecContext:[1,2,1,""],DeclarationsContext:[1,2,1,""],EFFECT:[1,4,1,""],ELIF:[1,4,1,""],ELSE:[1,4,1,""],EOF:[1,4,1,""],EQ_TO:[1,4,1,""],EXECUTE:[1,4,1,""],EffectContext:[1,2,1,""],Effect_statContext:[1,2,1,""],ExecuteContext:[1,2,1,""],FACTOR:[1,4,1,""],FALSE:[1,4,1,""],FEATURE:[1,4,1,""],FNAME:[1,4,1,""],FactorContext:[1,2,1,""],FeatureContext:[1,2,1,""],GOAL:[1,4,1,""],GT:[1,4,1,""],GT_EQ:[1,4,1,""],GoalContext:[1,2,1,""],IDENTIFIER:[1,4,1,""],IF:[1,4,1,""],IMPORT:[1,4,1,""],IN:[1,4,1,""],INDENT:[1,4,1,""],INIT:[1,4,1,""],INTEGER:[1,4,1,""],Import_statContext:[1,2,1,""],ImportsContext:[1,2,1,""],Index_expContext:[1,2,1,""],LT:[1,4,1,""],LT_EQ:[1,4,1,""],L_BRK:[1,4,1,""],L_PAR:[1,4,1,""],MARKOVFEATURE:[1,4,1,""],MINUS:[1,4,1,""],MINUS_EQ:[1,4,1,""],Markov_featureContext:[1,2,1,""],NL:[1,4,1,""],NOT:[1,4,1,""],NOT_EQ:[1,4,1,""],OPTION:[1,4,1,""],OR:[1,4,1,""],OptionContext:[1,2,1,""],PLUS:[1,4,1,""],PLUS_EQ:[1,4,1,""],POLICY:[1,4,1,""],PREDICATE:[1,4,1,""],PolicyContext:[1,2,1,""],Policy_statContext:[1,2,1,""],PredicateContext:[1,2,1,""],ProgramContext:[1,2,1,""],REWARD:[1,4,1,""],RULE_action:[1,4,1,""],RULE_any_bound_var:[1,4,1,""],RULE_any_decimal:[1,4,1,""],RULE_any_integer:[1,4,1,""],RULE_any_number:[1,4,1,""],RULE_arithmetic_exp:[1,4,1,""],RULE_array_exp:[1,4,1,""],RULE_assignment:[1,4,1,""],RULE_boolean_exp:[1,4,1,""],RULE_constant:[1,4,1,""],RULE_dec:[1,4,1,""],RULE_declarations:[1,4,1,""],RULE_effect:[1,4,1,""],RULE_effect_stat:[1,4,1,""],RULE_execute:[1,4,1,""],RULE_factor:[1,4,1,""],RULE_feature:[1,4,1,""],RULE_goal:[1,4,1,""],RULE_import_stat:[1,4,1,""],RULE_imports:[1,4,1,""],RULE_index_exp:[1,4,1,""],RULE_markov_feature:[1,4,1,""],RULE_option:[1,4,1,""],RULE_policy:[1,4,1,""],RULE_policy_stat:[1,4,1,""],RULE_predicate:[1,4,1,""],RULE_program:[1,4,1,""],RULE_reward:[1,4,1,""],RULE_slice_exp:[1,4,1,""],RULE_trailer:[1,4,1,""],R_BRK:[1,4,1,""],R_PAR:[1,4,1,""],RewardContext:[1,2,1,""],S:[1,4,1,""],SKIP_:[1,4,1,""],S_PRIME:[1,4,1,""],Slice_expContext:[1,2,1,""],TIMES:[1,4,1,""],TIMES_EQ:[1,4,1,""],TRUE:[1,4,1,""],TrailerContext:[1,2,1,""],Trailer_indexContext:[1,2,1,""],Trailer_sliceContext:[1,2,1,""],UNTIL:[1,4,1,""],action:[1,3,1,""],any_bound_var:[1,3,1,""],any_decimal:[1,3,1,""],any_integer:[1,3,1,""],any_number:[1,3,1,""],arithmetic_exp:[1,3,1,""],arithmetic_exp_sempred:[1,3,1,""],array_exp:[1,3,1,""],assignment:[1,3,1,""],atn:[1,4,1,""],boolean_exp:[1,3,1,""],boolean_exp_sempred:[1,3,1,""],buildParseTrees:[1,4,1,""],constant:[1,3,1,""],dec:[1,3,1,""],decisionsToDFA:[1,4,1,""],declarations:[1,3,1,""],effect:[1,3,1,""],effect_stat:[1,3,1,""],execute:[1,3,1,""],factor:[1,3,1,""],feature:[1,3,1,""],goal:[1,3,1,""],grammarFileName:[1,4,1,""],import_stat:[1,3,1,""],imports:[1,3,1,""],index_exp:[1,3,1,""],literalNames:[1,4,1,""],markov_feature:[1,3,1,""],option:[1,3,1,""],policy:[1,3,1,""],policy_stat:[1,3,1,""],predicate:[1,3,1,""],program:[1,3,1,""],reward:[1,3,1,""],ruleNames:[1,4,1,""],sempred:[1,3,1,""],sharedContextCache:[1,4,1,""],slice_exp:[1,3,1,""],symbolicNames:[1,4,1,""],trailer:[1,3,1,""]},"language.RLangParser.RLangParser.ActionContext":{ACTION:[1,3,1,""],BIND:[1,3,1,""],IDENTIFIER:[1,3,1,""],INTEGER:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Any_bound_varContext":{A:[1,3,1,""],IDENTIFIER:[1,3,1,""],S:[1,3,1,""],S_PRIME:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""],trailer:[1,3,1,""]},"language.RLangParser.RLangParser.Any_decimalContext":{DECIMAL:[1,3,1,""],MINUS:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Any_integerContext":{INTEGER:[1,3,1,""],MINUS:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Any_num_decContext":{any_decimal:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Any_num_intContext":{any_integer:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Any_numberContext":{copyFrom:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Arith_bound_varContext":{any_bound_var:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Arith_numberContext":{any_number:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Arith_parenContext":{L_PAR:[1,3,1,""],R_PAR:[1,3,1,""],arithmetic_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Arith_plus_minusContext":{MINUS:[1,3,1,""],PLUS:[1,3,1,""],arithmetic_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Arith_times_divideContext":{DIVIDE:[1,3,1,""],TIMES:[1,3,1,""],arithmetic_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Arithmetic_expContext":{copyFrom:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Array_expContext":{COM:[1,3,1,""],L_BRK:[1,3,1,""],R_BRK:[1,3,1,""],any_integer:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.AssignmentContext":{ASSIGN:[1,3,1,""],DIV_EQ:[1,3,1,""],IDENTIFIER:[1,3,1,""],MINUS_EQ:[1,3,1,""],PLUS_EQ:[1,3,1,""],S:[1,3,1,""],S_PRIME:[1,3,1,""],TIMES_EQ:[1,3,1,""],arithmetic_exp:[1,3,1,""],array_exp:[1,3,1,""],boolean_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""],trailer:[1,3,1,""]},"language.RLangParser.RLangParser.Bool_andContext":{AND:[1,3,1,""],boolean_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Bool_arith_eqContext":{EQ_TO:[1,3,1,""],GT:[1,3,1,""],GT_EQ:[1,3,1,""],LT:[1,3,1,""],LT_EQ:[1,3,1,""],NOT_EQ:[1,3,1,""],arithmetic_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Bool_bool_eqContext":{EQ_TO:[1,3,1,""],NOT_EQ:[1,3,1,""],boolean_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Bool_bound_varContext":{any_bound_var:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Bool_inContext":{IN:[1,3,1,""],any_bound_var:[1,3,1,""],arithmetic_exp:[1,3,1,""],array_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Bool_notContext":{NOT:[1,3,1,""],boolean_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Bool_orContext":{OR:[1,3,1,""],boolean_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Bool_parenContext":{L_PAR:[1,3,1,""],R_PAR:[1,3,1,""],boolean_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Bool_tfContext":{FALSE:[1,3,1,""],TRUE:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Boolean_expContext":{copyFrom:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.ConstantContext":{BIND:[1,3,1,""],CONSTANT:[1,3,1,""],IDENTIFIER:[1,3,1,""],any_bound_var:[1,3,1,""],arithmetic_exp:[1,3,1,""],array_exp:[1,3,1,""],boolean_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.DecContext":{NL:[1,3,1,""],action:[1,3,1,""],constant:[1,3,1,""],effect:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],factor:[1,3,1,""],feature:[1,3,1,""],getRuleIndex:[1,3,1,""],goal:[1,3,1,""],markov_feature:[1,3,1,""],option:[1,3,1,""],parser:[1,4,1,""],policy:[1,3,1,""],predicate:[1,3,1,""]},"language.RLangParser.RLangParser.DeclarationsContext":{dec:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.EffectContext":{COL:[1,3,1,""],DEDENT:[1,3,1,""],EFFECT:[1,3,1,""],INDENT:[1,3,1,""],NL:[1,3,1,""],boolean_exp:[1,3,1,""],effect_stat:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Effect_statContext":{assignment:[1,3,1,""],constant:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""],reward:[1,3,1,""]},"language.RLangParser.RLangParser.ExecuteContext":{EXECUTE:[1,3,1,""],IDENTIFIER:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.FactorContext":{BIND:[1,3,1,""],FACTOR:[1,3,1,""],IDENTIFIER:[1,3,1,""],S:[1,3,1,""],array_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""],trailer:[1,3,1,""]},"language.RLangParser.RLangParser.FeatureContext":{BIND:[1,3,1,""],FEATURE:[1,3,1,""],IDENTIFIER:[1,3,1,""],arithmetic_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.GoalContext":{BIND:[1,3,1,""],GOAL:[1,3,1,""],IDENTIFIER:[1,3,1,""],boolean_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Import_statContext":{FNAME:[1,3,1,""],IMPORT:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.ImportsContext":{NL:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],import_stat:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Index_expContext":{L_BRK:[1,3,1,""],R_BRK:[1,3,1,""],any_integer:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Markov_featureContext":{BIND:[1,3,1,""],IDENTIFIER:[1,3,1,""],MARKOVFEATURE:[1,3,1,""],arithmetic_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.OptionContext":{COL:[1,3,1,""],DEDENT:[1,3,1,""],IDENTIFIER:[1,3,1,""],INDENT:[1,3,1,""],INIT:[1,3,1,""],NL:[1,3,1,""],OPTION:[1,3,1,""],UNTIL:[1,3,1,""],boolean_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""],policy_stat:[1,3,1,""]},"language.RLangParser.RLangParser.PolicyContext":{COL:[1,3,1,""],DEDENT:[1,3,1,""],IDENTIFIER:[1,3,1,""],INDENT:[1,3,1,""],NL:[1,3,1,""],POLICY:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""],policy_stat:[1,3,1,""]},"language.RLangParser.RLangParser.Policy_statContext":{COL:[1,3,1,""],DEDENT:[1,3,1,""],ELIF:[1,3,1,""],ELSE:[1,3,1,""],IF:[1,3,1,""],INDENT:[1,3,1,""],NL:[1,3,1,""],boolean_exp:[1,3,1,""],enterRule:[1,3,1,""],execute:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""],policy_stat:[1,3,1,""]},"language.RLangParser.RLangParser.PredicateContext":{BIND:[1,3,1,""],IDENTIFIER:[1,3,1,""],PREDICATE:[1,3,1,""],boolean_exp:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.ProgramContext":{NL:[1,3,1,""],declarations:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],imports:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.RewardContext":{REWARD:[1,3,1,""],any_number:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Slice_expContext":{COL:[1,3,1,""],L_BRK:[1,3,1,""],R_BRK:[1,3,1,""],any_integer:[1,3,1,""],enterRule:[1,3,1,""],exitRule:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.TrailerContext":{copyFrom:[1,3,1,""],getRuleIndex:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Trailer_indexContext":{enterRule:[1,3,1,""],exitRule:[1,3,1,""],index_exp:[1,3,1,""],parser:[1,4,1,""]},"language.RLangParser.RLangParser.Trailer_sliceContext":{enterRule:[1,3,1,""],exitRule:[1,3,1,""],parser:[1,4,1,""],slice_exp:[1,3,1,""]},"language.RLangParserListener":{RLangParserListener:[1,2,1,""]},"language.RLangParserListener.RLangParserListener":{enterAction:[1,3,1,""],enterAny_bound_var:[1,3,1,""],enterAny_decimal:[1,3,1,""],enterAny_integer:[1,3,1,""],enterAny_num_dec:[1,3,1,""],enterAny_num_int:[1,3,1,""],enterArith_bound_var:[1,3,1,""],enterArith_number:[1,3,1,""],enterArith_paren:[1,3,1,""],enterArith_plus_minus:[1,3,1,""],enterArith_times_divide:[1,3,1,""],enterArray_exp:[1,3,1,""],enterAssignment:[1,3,1,""],enterBool_and:[1,3,1,""],enterBool_arith_eq:[1,3,1,""],enterBool_bool_eq:[1,3,1,""],enterBool_bound_var:[1,3,1,""],enterBool_in:[1,3,1,""],enterBool_not:[1,3,1,""],enterBool_or:[1,3,1,""],enterBool_paren:[1,3,1,""],enterBool_tf:[1,3,1,""],enterConstant:[1,3,1,""],enterDec:[1,3,1,""],enterDeclarations:[1,3,1,""],enterEffect:[1,3,1,""],enterEffect_stat:[1,3,1,""],enterExecute:[1,3,1,""],enterFactor:[1,3,1,""],enterFeature:[1,3,1,""],enterGoal:[1,3,1,""],enterImport_stat:[1,3,1,""],enterImports:[1,3,1,""],enterIndex_exp:[1,3,1,""],enterMarkov_feature:[1,3,1,""],enterOption:[1,3,1,""],enterPolicy:[1,3,1,""],enterPolicy_stat:[1,3,1,""],enterPredicate:[1,3,1,""],enterProgram:[1,3,1,""],enterReward:[1,3,1,""],enterSlice_exp:[1,3,1,""],enterTrailer_index:[1,3,1,""],enterTrailer_slice:[1,3,1,""],exitAction:[1,3,1,""],exitAny_bound_var:[1,3,1,""],exitAny_decimal:[1,3,1,""],exitAny_integer:[1,3,1,""],exitAny_num_dec:[1,3,1,""],exitAny_num_int:[1,3,1,""],exitArith_bound_var:[1,3,1,""],exitArith_number:[1,3,1,""],exitArith_paren:[1,3,1,""],exitArith_plus_minus:[1,3,1,""],exitArith_times_divide:[1,3,1,""],exitArray_exp:[1,3,1,""],exitAssignment:[1,3,1,""],exitBool_and:[1,3,1,""],exitBool_arith_eq:[1,3,1,""],exitBool_bool_eq:[1,3,1,""],exitBool_bound_var:[1,3,1,""],exitBool_in:[1,3,1,""],exitBool_not:[1,3,1,""],exitBool_or:[1,3,1,""],exitBool_paren:[1,3,1,""],exitBool_tf:[1,3,1,""],exitConstant:[1,3,1,""],exitDec:[1,3,1,""],exitDeclarations:[1,3,1,""],exitEffect:[1,3,1,""],exitEffect_stat:[1,3,1,""],exitExecute:[1,3,1,""],exitFactor:[1,3,1,""],exitFeature:[1,3,1,""],exitGoal:[1,3,1,""],exitImport_stat:[1,3,1,""],exitImports:[1,3,1,""],exitIndex_exp:[1,3,1,""],exitMarkov_feature:[1,3,1,""],exitOption:[1,3,1,""],exitPolicy:[1,3,1,""],exitPolicy_stat:[1,3,1,""],exitPredicate:[1,3,1,""],exitProgram:[1,3,1,""],exitReward:[1,3,1,""],exitSlice_exp:[1,3,1,""],exitTrailer_index:[1,3,1,""],exitTrailer_slice:[1,3,1,""]},"language.VocabularyAssembler":{VocabularyAssembler:[1,2,1,""]},"language.VocabularyAssembler.VocabularyAssembler":{import_lmdp_objects:[1,3,1,""],import_modules:[1,3,1,""],retrieve_state_size:[1,3,1,""]},"lmdp.LMDPClass":{LMDP:[2,2,1,""]},"lmdp.LMDPClass.LMDP":{LMDPs:[2,4,1,""],action:[2,3,1,""],add:[2,3,1,""],add_actions:[2,3,1,""],add_state_feature:[2,3,1,""],add_subpolicy:[2,3,1,""],add_symbol:[2,3,1,""],bind:[2,3,1,""],build_state:[2,3,1,""],get_actions:[2,3,1,""],get_subpolicies:[2,3,1,""],get_symbols:[2,3,1,""],goal:[2,3,1,""],id:[2,4,1,""],policy:[2,6,1,""],reward:[2,6,1,""],state_feature:[2,3,1,""],state_groundings:[2,3,1,""],subpolicy:[2,3,1,""],symbol:[2,3,1,""],transition:[2,6,1,""],value:[2,6,1,""],when:[2,3,1,""]},"lmdp.RLMDPClass":{RLMDP:[2,2,1,""]},"lmdp.experiment_runner":{experiment_params:[2,5,1,""],run_agents:[2,5,1,""],run_single_agent_on_mdp:[2,5,1,""]},"lmdp.grounding":{GroundingClass:[3,0,0,"-"],PartialFunctionClass:[3,0,0,"-"],VocabularyClass:[3,0,0,"-"],actions:[4,0,0,"-"],booleans:[5,0,0,"-"],expressions:[6,0,0,"-"],real:[7,0,0,"-"],rewards:[8,0,0,"-"],states:[9,0,0,"-"],transitions:[10,0,0,"-"]},"lmdp.grounding.GroundingClass":{Grounding:[3,2,1,""]},"lmdp.grounding.GroundingClass.Grounding":{name:[3,6,1,""]},"lmdp.grounding.PartialFunctionClass":{PartialFunction:[3,2,1,""]},"lmdp.grounding.PartialFunctionClass.PartialFunction":{add_specification:[3,3,1,""]},"lmdp.grounding.VocabularyClass":{Vocabulary:[3,2,1,""]},"lmdp.grounding.VocabularyClass.Vocabulary":{add:[3,3,1,""]},"lmdp.grounding.actions":{ActionGroundingClass:[4,0,0,"-"],DiscreteActionGroundingClass:[4,0,0,"-"],PolicyElementsClass:[4,0,0,"-"],PolicyFromDictClass:[4,0,0,"-"],PolicyGroundingClass:[4,0,0,"-"],SubpolicyClass:[4,0,0,"-"],options:[4,0,0,"-"],policy:[4,5,1,""],subpolicy:[4,5,1,""]},"lmdp.grounding.actions.ActionGroundingClass":{ActionGrounding:[4,2,1,""]},"lmdp.grounding.actions.ActionGroundingClass.ActionGrounding":{counter:[4,4,1,""]},"lmdp.grounding.actions.DiscreteActionGroundingClass":{DiscreteActionGrounding:[4,2,1,""]},"lmdp.grounding.actions.PolicyElementsClass":{PolicyElements:[4,2,1,""]},"lmdp.grounding.actions.PolicyElementsClass.PolicyElements":{add:[4,3,1,""],counter:[4,4,1,""],do_not_execute:[4,3,1,""],execute:[4,3,1,""]},"lmdp.grounding.actions.PolicyFromDictClass":{PolicyFromDict:[4,2,1,""]},"lmdp.grounding.actions.PolicyFromDictClass.PolicyFromDict":{add:[4,3,1,""]},"lmdp.grounding.actions.PolicyGroundingClass":{Policy:[4,2,1,""]},"lmdp.grounding.actions.SubpolicyClass":{Subpolicy:[4,2,1,""],SubpolicyChain:[4,2,1,""]},"lmdp.grounding.actions.SubpolicyClass.Subpolicy":{id:[4,4,1,""],is_executable:[4,3,1,""],is_executing:[4,3,1,""],primitive_to_subpolicy:[4,3,1,""],to_option2:[4,3,1,""],to_option:[4,3,1,""]},"lmdp.grounding.actions.SubpolicyClass.SubpolicyChain":{is_executing:[4,3,1,""]},"lmdp.grounding.actions.options":{Option:[4,2,1,""]},"lmdp.grounding.actions.options.Option":{get_id:[4,3,1,""],id:[4,4,1,""],initiation:[4,6,1,""],is_executable:[4,3,1,""],is_learnable:[4,3,1,""],policy:[4,6,1,""],primitive_to_option:[4,3,1,""],terminated:[4,3,1,""],termination:[4,6,1,""]},"lmdp.grounding.booleans":{BooleanFunClass:[5,0,0,"-"]},"lmdp.grounding.booleans.BooleanFunClass":{"boolean":[5,5,1,""],BooleanExpression:[5,2,1,""],bool_and:[5,5,1,""],bool_not:[5,5,1,""],bool_or:[5,5,1,""],cast_to_boolean:[5,5,1,""],grounded_and:[5,5,1,""],grounded_or:[5,5,1,""]},"lmdp.grounding.booleans.BooleanFunClass.BooleanExpression":{and_:[5,3,1,""],not_:[5,3,1,""],or_:[5,3,1,""]},"lmdp.grounding.expressions":{ConditionalExpressionClass:[6,0,0,"-"],ExpressionsClass:[6,0,0,"-"]},"lmdp.grounding.expressions.ConditionalExpressionClass":{Conditional:[6,2,1,""],Context:[6,2,1,""],empty_stack:[6,5,1,""]},"lmdp.grounding.expressions.ConditionalExpressionClass.Conditional":{do_not_execute:[6,3,1,""],effect:[6,3,1,""],execute:[6,3,1,""],otherwise:[6,3,1,""],policy:[6,3,1,""],reward:[6,3,1,""],subpolicy:[6,3,1,""],symbol:[6,3,1,""],value:[6,3,1,""],when:[6,3,1,""]},"lmdp.grounding.expressions.ConditionalExpressionClass.Context":{"boolean":[6,6,1,""],is_when:[6,6,1,""],outer_ctx:[6,6,1,""]},"lmdp.grounding.expressions.ExpressionsClass":{Expression:[6,2,1,""],rlang_exp:[6,5,1,""]},"lmdp.grounding.expressions.ExpressionsClass.Expression":{codomain:[6,6,1,""],domain:[6,6,1,""]},"lmdp.grounding.real":{MarkovFeatureClass:[7,0,0,"-"],RealExpressionClass:[7,0,0,"-"]},"lmdp.grounding.real.MarkovFeatureClass":{MarkovFeature:[7,2,1,""]},"lmdp.grounding.real.RealExpressionClass":{RealConstant:[7,2,1,""],RealExpression:[7,2,1,""],real_exp:[7,5,1,""]},"lmdp.grounding.real.RealExpressionClass.RealExpression":{dim:[7,3,1,""]},"lmdp.grounding.rewards":{RewardGroundingClass:[8,0,0,"-"],ValueGroundingClass:[8,0,0,"-"]},"lmdp.grounding.rewards.RewardGroundingClass":{RewardGrounding:[8,2,1,""]},"lmdp.grounding.rewards.RewardGroundingClass.RewardGrounding":{add:[8,3,1,""],id:[8,4,1,""]},"lmdp.grounding.rewards.ValueGroundingClass":{ValueGrounding:[8,2,1,""]},"lmdp.grounding.rewards.ValueGroundingClass.ValueGrounding":{add:[8,3,1,""],id:[8,4,1,""]},"lmdp.grounding.states":{Effect:[9,0,0,"-"],EffectSymbolClass:[9,0,0,"-"],NextStateGroundingClass:[9,0,0,"-"],PredicateClass:[9,0,0,"-"],StateClass:[9,0,0,"-"],StateGroundingClass:[9,0,0,"-"],effect:[9,5,1,""],predicate:[9,5,1,""],state_feature:[9,5,1,""]},"lmdp.grounding.states.Effect":{Effect:[9,2,1,""],PredictiveEffect:[9,2,1,""]},"lmdp.grounding.states.Effect.Effect":{effect:[9,3,1,""]},"lmdp.grounding.states.Effect.PredictiveEffect":{effect:[9,3,1,""]},"lmdp.grounding.states.EffectSymbolClass":{EffectSymbol:[9,2,1,""]},"lmdp.grounding.states.NextStateGroundingClass":{NextStateGrounding:[9,2,1,""],NextStatePredicate:[9,2,1,""],next_state:[9,5,1,""]},"lmdp.grounding.states.NextStateGroundingClass.NextStateGrounding":{dim:[9,3,1,""],domain:[9,6,1,""],executor:[9,3,1,""],number_of_features:[9,3,1,""],real_expression:[9,3,1,""]},"lmdp.grounding.states.NextStateGroundingClass.NextStatePredicate":{executor:[9,3,1,""]},"lmdp.grounding.states.PredicateClass":{Predicate:[9,2,1,""]},"lmdp.grounding.states.PredicateClass.Predicate":{and_:[9,3,1,""],counter:[9,4,1,""],not_:[9,3,1,""],or_:[9,3,1,""]},"lmdp.grounding.states.StateClass":{BatchedState:[9,2,1,""],State:[9,2,1,""],StateSpace:[9,2,1,""],state_builder:[9,5,1,""]},"lmdp.grounding.states.StateClass.State":{features:[9,3,1,""],numpy:[9,3,1,""]},"lmdp.grounding.states.StateClass.StateSpace":{build:[9,3,1,""]},"lmdp.grounding.states.StateGroundingClass":{StateFactor:[9,2,1,""],StateFeature:[9,2,1,""]},"lmdp.grounding.states.StateGroundingClass.StateFactor":{check_concat:[9,3,1,""],concat:[9,3,1,""],counter:[9,4,1,""],dim:[9,3,1,""],executor:[9,3,1,""],in_:[9,3,1,""],number_of_features:[9,3,1,""],real_expression:[9,3,1,""],variables:[9,3,1,""]},"lmdp.grounding.states.StateGroundingClass.StateFeature":{executor:[9,3,1,""],number_of_features:[9,3,1,""],variables:[9,3,1,""]},"lmdp.grounding.transitions":{TransitionGroundingClass:[10,0,0,"-"]},"lmdp.grounding.transitions.TransitionGroundingClass":{TransitionGrounding:[10,2,1,""]},"lmdp.grounding.transitions.TransitionGroundingClass.TransitionGrounding":{add:[10,3,1,""]},"lmdp.utils":{StateSpaceGenClass:[11,0,0,"-"],collections:[11,0,0,"-"],expression_utils:[11,0,0,"-"],features:[11,0,0,"-"],space:[11,0,0,"-"]},"lmdp.utils.StateSpaceGenClass":{StateSpaceGen:[11,2,1,""]},"lmdp.utils.collections":{ArrayDict:[11,2,1,""],DefaultDict:[11,2,1,""],Index:[11,2,1,""]},"lmdp.utils.collections.ArrayDict":{keys:[11,3,1,""],numpy:[11,3,1,""]},"lmdp.utils.collections.Index":{elems:[11,3,1,""],objects:[11,3,1,""]},"lmdp.utils.expression_utils":{Codomain:[11,2,1,""],Domain:[11,2,1,""]},"lmdp.utils.expression_utils.Codomain":{CODOMAINS:[11,4,1,""],CODOMAINS_repr:[11,4,1,""],INV_CODOMAINS:[11,4,1,""]},"lmdp.utils.expression_utils.Domain":{DOMAINS:[11,4,1,""],DOMAINS_repr:[11,4,1,""],INV_DOMAINS:[11,4,1,""],is_a:[11,3,1,""],is_s:[11,3,1,""],is_sa:[11,3,1,""],is_sas:[11,3,1,""],is_ss:[11,3,1,""]},"lmdp.utils.features":{FourierBasis:[11,2,1,""]},"lmdp.utils.features.FourierBasis":{get_features:[11,3,1,""],num_features:[11,3,1,""]},"lmdp.utils.space":{BatchedTuple:[11,2,1,""],BatchedVector:[11,2,1,""],DiscreteSpace:[11,2,1,""],Vector:[11,2,1,""]},"lmdp.utils.space.BatchedTuple":{batch_size:[11,3,1,""]},"lmdp.utils.space.BatchedVector":{batch_size:[11,3,1,""],nonzero:[11,3,1,""],reshape:[11,3,1,""],shape:[11,6,1,""]},"lmdp.utils.space.DiscreteSpace":{generate:[11,3,1,""]},"lmdp.utils.space.Vector":{batch_size:[11,3,1,""],dim:[11,3,1,""],nonzero:[11,3,1,""],reshape:[11,3,1,""]},language:{Exceptions:[1,0,0,"-"],RLangErrorListener:[1,0,0,"-"],RLangErrorStrategy:[1,0,0,"-"],RLangLexer:[1,0,0,"-"],RLangListener:[1,0,0,"-"],RLangParser:[1,0,0,"-"],RLangParserListener:[1,0,0,"-"],VocabularyAssembler:[1,0,0,"-"]},lmdp:{LMDPClass:[2,0,0,"-"],RLMDPClass:[2,0,0,"-"],experiment_runner:[2,0,0,"-"],grounding:[3,0,0,"-"],utils:[11,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","exception","Python exception"],"2":["py","class","Python class"],"3":["py","method","Python method"],"4":["py","attribute","Python attribute"],"5":["py","function","Python function"],"6":["py","property","Python property"]},objtypes:{"0":"py:module","1":"py:exception","2":"py:class","3":"py:method","4":"py:attribute","5":"py:function","6":"py:property"},terms:{"0":[1,2,4,6,8,9,11],"1":[1,6,7,9,11],"10":[1,11],"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"2":[1,6,9,11],"20":1,"2020":[2,3,4,8,9,10,11],"2021":[2,3,4,5,6,7,8,9],"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"3":[1,11],"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"4":[1,11],"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"5":[1,11],"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"6":[1,11],"7":[1,11],"8":[1,11],"9":[1,11],"abstract":[2,3,4],"boolean":[2,3,6,9,11],"class":[1,2,3,4,5,6,7,8,9,10,11],"default":11,"float":11,"function":[3,4,5,6,7,8,9,11],"import":1,"int":[1,2],"new":10,"return":[1,2,5,9],"true":[1,11],A:[1,11],AND:1,For:2,IF:1,IN:1,It:[4,6],NOT:1,OR:1,These:9,__name__:[5,9],_conj:[5,9],_disj:[5,9],_io:1,_neg:[5,9],_p:1,action:[1,2,3,6,9,10,11],action_funct:4,action_not_execut:4,action_pair:4,action_to_execut:4,actioncontext:1,actionground:4,actiongroundingclass:[2,3],actions_list:2,add:[2,3,4,8,10],add_act:2,add_specif:3,add_state_featur:2,add_subpolici:2,add_symbol:2,addvari:1,agent:2,alia:6,allow:[6,9,11],alreadi:8,alreadybounderror:1,among:9,an:[5,7,9],and_:[5,9],ani:[1,5,9],antlr4:1,antlr_dent:1,any_act:6,any_bound_var:1,any_bound_varcontext:1,any_char:1,any_decim:1,any_decimalcontext:1,any_integ:1,any_integercontext:1,any_num_deccontext:1,any_num_intcontext:1,any_numb:1,any_numbercontext:1,any_st:[4,6],appli:[5,9],applic:9,ar:[9,11],arg:[2,9],argument:6,arith_bound_varcontext:1,arith_numbercontext:1,arith_parencontext:1,arith_plus_minuscontext:1,arith_times_dividecontext:1,arithmetic_exp:1,arithmetic_exp_sempr:1,arithmetic_expcontext:1,arrai:9,array_exp:1,array_expcontext:1,arraydict:11,as_tupl:11,assign:1,assignmentcontext:1,assum:9,atn:1,august:[3,4,8,9,10],author:[2,3,4,5,6,7,8,9,10,11],b:9,base:[1,2,3,4,5,6,7,8,9,10,11],batch_siz:11,batchedst:9,batchedtupl:11,batchedvector:[9,11],bind:[1,2],bool:[2,5,9],bool_and:5,bool_andcontext:1,bool_arith_eqcontext:1,bool_bool_eqcontext:1,bool_bound_varcontext:1,bool_incontext:1,bool_not:5,bool_notcontext:1,bool_or:5,bool_orcontext:1,bool_parencontext:1,bool_tfcontext:1,boolean_cond:3,boolean_exp:1,boolean_exp_sempr:1,boolean_expcontext:1,boolean_express:[2,6],boolean_expression_:6,boolean_expression_sa:[6,9,10],boolean_fun:9,booleanexpress:[5,9],booleanfunclass:[2,3,9],brown:[2,3,4,5,6,7,8,9,10,11],bufferedtokenstream:1,build:9,build_stat:2,buildparsetre:1,can:9,cast:5,cast_to_boolean:5,channelnam:1,check:9,check_concat:9,classmethod:[4,9],codomain:[3,5,6,7,11],codomains_repr:11,col:1,collect:[2,12],column:1,com:1,combin:[5,9],comment:1,commontoken:1,composit:6,concat:9,concatan:9,condit:6,conditionalexpressionclass:[2,3],constant:[1,7],constantcontext:1,content:12,context:6,copyfrom:1,correctli:6,counter:[4,9],creat:[6,9],ctx:1,cumul:2,custom:11,data:[9,11],date:[2,3,4,5,6,7,8,9,10,11],dec:1,deccontext:1,decim:1,decisionstodfa:1,declar:1,declarationscontext:1,dedent:1,dedent_token:1,default_mod:1,default_token_channel:1,default_valu:11,defaultdict:11,defaulterrorstrategi:1,defin:9,denter:1,denterhelp:1,descript:5,determin:9,determinist:[2,10],dfa:1,dict:[4,11],dict_factori:11,dictionari:[4,8,9],digit:1,dim:[7,9,11],dimens:[7,9],discount:2,discret:[2,4,11],discreteactionground:4,discreteactiongroundingclass:[2,3],discretespac:11,div_eq:1,divid:1,do_not_execut:[4,6],domain:[3,5,6,7,9,11],domain_nam:2,domains_repr:11,dtype:11,dynam:2,e:1,edu:[2,3,4,5,6,7,8,9,10,11],effect:[1,2,3,6,10],effect_express:6,effect_stat:1,effect_statcontext:1,effectcontext:1,effectsymbol:9,effectsymbolclass:[2,3],elem:[3,11],element:[2,9],elif:1,els:1,empty_stack:6,encod:1,enteract:1,enterany_bound_var:1,enterany_decim:1,enterany_integ:1,enterany_num_dec:1,enterany_num_int:1,enterarith_bound_var:1,enterarith_numb:1,enterarith_paren:1,enterarith_plus_minu:1,enterarith_times_divid:1,enterarray_exp:1,enterassign:1,enterbool_and:1,enterbool_arith_eq:1,enterbool_bool_eq:1,enterbool_bound_var:1,enterbool_in:1,enterbool_not:1,enterbool_or:1,enterbool_paren:1,enterbool_tf:1,enterconst:1,enterdec:1,enterdeclar:1,entereffect:1,entereffect_stat:1,enterexecut:1,enterfactor:1,enterfeatur:1,entergo:1,enterimport:1,enterimport_stat:1,enterindex_exp:1,entermarkov_featur:1,enteropt:1,enterpolici:1,enterpolicy_stat:1,enterpred:1,enterprogram:1,enterreward:1,enterrul:1,enterslice_exp:1,entertrailer_index:1,entertrailer_slic:1,eof:1,episod:2,eq_to:1,error:1,errorlisten:1,errorstrategi:1,except:12,execut:[1,4,6],executecontext:1,executor:9,exist:8,exitact:1,exitany_bound_var:1,exitany_decim:1,exitany_integ:1,exitany_num_dec:1,exitany_num_int:1,exitarith_bound_var:1,exitarith_numb:1,exitarith_paren:1,exitarith_plus_minu:1,exitarith_times_divid:1,exitarray_exp:1,exitassign:1,exitbool_and:1,exitbool_arith_eq:1,exitbool_bool_eq:1,exitbool_bound_var:1,exitbool_in:1,exitbool_not:1,exitbool_or:1,exitbool_paren:1,exitbool_tf:1,exitconst:1,exitdec:1,exitdeclar:1,exiteffect:1,exiteffect_stat:1,exitexecut:1,exitfactor:1,exitfeatur:1,exitgo:1,exitimport:1,exitimport_stat:1,exitindex_exp:1,exitmarkov_featur:1,exitopt:1,exitpolici:1,exitpolicy_stat:1,exitpred:1,exitprogram:1,exitreward:1,exitrul:1,exitslice_exp:1,exittrailer_index:1,exittrailer_slic:1,exp:5,exp_param:2,experi:[2,7],experiment_param:2,experiment_runn:12,expres:9,express:[2,3,4,5,7,9],expression_fun:7,expression_util:[2,12],expressionsclass:[2,3,4,5,7,9],expresss:5,f:11,factor:[1,9],factor_nam:2,factorcontext:1,factori:9,fals:[1,2],featur:[1,2,7,9,12],feature_posit:9,featurecontext:1,field:6,flexibl:9,fname:1,form:[3,6],fourierbasi:11,from:[5,9],fun:[5,6,9],func:9,g4:1,gener:[9,11],get_act:2,get_featur:11,get_id:4,get_subpolici:2,get_symbol:2,getruleindex:1,given:3,goal:[1,2],goalcontext:1,grammarfilenam:1,ground:[2,12],grounded_and:5,grounded_or:5,groundingclass:[2,4,8,9,10,12],gt:1,gt_eq:1,have:11,hidden:1,hold:2,i:1,id:[2,4,8],identifi:1,ignore_eof:1,implement:[3,9],import_lmdp_object:1,import_modul:1,import_stat:1,import_statcontext:1,importscontext:1,in_:9,includ:9,indent:1,indent_token:1,index:[0,11],index_exp:1,index_expcontext:1,inform:2,init:1,init_symbol:4,initi:[4,6,9],input:[1,11],integ:[1,11],inv_codomain:11,inv_domain:11,invalid:1,invokingst:1,is_:11,is_a:11,is_execut:4,is_learn:4,is_sa:11,is_ss:11,is_when:6,iter:11,its:5,januari:[2,3,4,5,6,7,8,9],join:[5,9],kei:11,kwarg:2,kword:11,l:9,l_brk:1,l_par:1,languag:[2,12],letter:1,lexer:1,line:1,list:[2,5,9],listen:1,literalnam:1,lmdp:[1,12],lmdpclass:[1,12],localctx:1,logic:[5,9],loop:2,lt:1,lt_eq:1,main:2,map:6,march:9,markov:7,markov_featur:1,markov_featurecontext:1,markovfeatur:[1,7],markovfeatureclass:[2,3],mdp:[2,3,6,9,11],mdp_action:4,minu:1,minus_eq:1,missing_el:9,mode:1,modenam:1,modul:[0,12],msg:1,multipl:5,must:9,n:9,n_dim:11,name:[1,2,3,4,5,6,7,8,9,10],ndarrai:5,negat:[5,9],next:9,next_stat:[9,11],nextstateground:9,nextstategroundingclass:[2,3],nextstatepred:9,nexttoken:1,nl:1,nl_token:1,none:[1,2,3,4,5,6,7,8,9,10,11],nonzero:11,not_:[5,9],not_eq:1,np:5,num:2,num_featur:11,number:[6,9,11],number_of_featur:9,numpi:[9,11],object:[1,2,3,4,6,9,11],octob:11,offendingsymbol:1,oper:[5,7,9],operand:[5,7,9],option:[1,2,3],optioncontext:1,or_:[5,9],order:11,other:[5,9],otherwis:6,outer_ctx:6,output:1,overlap:9,overrid:8,packag:12,page:0,pair:[3,9],param:[8,9,10],paramet:[4,5,9],parameter:9,parent:1,parsecancellationexcept:1,parser:1,parserrulecontext:1,parsetreelisten:1,parsevocabfil:1,part:3,partial:[3,4,5,8,9],partialfunct:[3,4,8,10],partialfunctionclass:[2,4,8,10,12],particular:9,per:2,pertin:6,pi:11,plu:1,plus_eq:1,polici:[1,2,4,6,11],policy_fun:4,policy_stat:1,policy_statcontext:1,policycontext:1,policyel:4,policyelementsclass:[2,3],policyfromdict:4,policyfromdictclass:[2,3],policygroundingclass:[2,3],predic:[1,8,9,10],predicateclass:[2,3],predicatecontext:1,predictioncontext:1,predictioncontextcach:1,predictiveeffect:9,predindex:1,prettyprint:12,primitive_to_opt:4,primitive_to_subpolici:4,prior:2,program:1,programcontext:1,properti:[2,3,4,6,9,11],pull_token:1,r:11,r_brk:1,r_par:1,rafael:[2,3,4,5,6,7,8,9,10,11],rais:[5,9],rang:11,reach:2,real:[2,3,9,11],real_exp:7,real_express:9,real_sas_express:6,realconst:7,realexpress:[7,9],realexpressionclass:[2,3,9],recogn:1,recoverinlin:1,repres:[3,5,9],represent:11,resample_at_termin:2,reset_at_termin:2,reshap:11,result_1:5,result_2:5,retrieve_state_s:1,retrievevari:1,rew:11,reward:[1,2,3,6,11],rewardcontext:1,rewardground:8,rewardgroundingclass:[2,3],rl:9,rlang:[1,3,4,5,7,9,10],rlang_exp:6,rlang_fnam:2,rlangerrorlisten:12,rlangerrorstrategi:12,rlanglex:12,rlanglisten:12,rlangpars:12,rlangparsecancellationexcept:1,rlangparserlisten:12,rlangsemanticerror:1,rlmdp:2,rlmdpclass:12,rodriguez:[2,3,4,5,6,7,8,9,10,11],rr:[2,3,4,5,6,7,8,9,10,11],rule_act:1,rule_any_bound_var:1,rule_any_decim:1,rule_any_integ:1,rule_any_numb:1,rule_arithmetic_exp:1,rule_array_exp:1,rule_assign:1,rule_boolean_exp:1,rule_const:1,rule_dec:1,rule_declar:1,rule_effect:1,rule_effect_stat:1,rule_execut:1,rule_factor:1,rule_featur:1,rule_go:1,rule_import:1,rule_import_stat:1,rule_index_exp:1,rule_markov_featur:1,rule_opt:1,rule_polici:1,rule_policy_stat:1,rule_pred:1,rule_program:1,rule_reward:1,rule_slice_exp:1,rule_trail:1,rulecontext:1,ruleindex:1,rulenam:1,run_ag:2,run_single_agent_on_mdp:2,s:[1,9,11],s_prime:1,sa_express:6,sanchez:[2,3,4,5,6,7,8,9,10,11],search:0,self:[5,9],sempr:1,septemb:[2,4,9],sequenc:9,serializedatn:1,set:9,set_of_act:11,set_of_st:11,shape:11,sharedcontextcach:1,simpl:9,simpledent:1,singl:2,skip_:1,slice_exp:1,slice_expcontext:1,space:[1,2,9,12],specif:[3,10],src:[1,4,5,7,9,10],stack:6,start:10,state:[2,3,4,11],state_build:9,state_dim:9,state_factori:9,state_featur:[2,9],state_ground:[2,9],state_groundings_list:2,stateclass:[2,3],statefactor:9,statefeatur:9,stategroundingclass:[2,3],statement:6,statespac:9,statespacegen:11,statespacegenclass:[2,12],stdout:1,step:2,str:[1,11],structur:9,sub:2,submodul:12,subpackag:12,subpolici:[2,4,6],subpolicychain:4,subpolicyclass:[2,3],summari:[2,5],sxa:9,sxax:7,symbol:[2,4,6,8,9,10],symbol_object:2,symbolicnam:1,symbols_reward:8,symbols_valu:8,sync:1,syntaxerror:1,t:11,take:9,taken:2,tensor:5,termin:[2,4],termination_symbol:4,textio:1,textiowrapp:1,thi:[2,6,9],time:[1,9],times_eq:1,to_opt:4,to_option2:4,tokenstream:1,torch:5,track_disc_reward:2,trailer:1,trailer_indexcontext:1,trailer_slicecontext:1,trailercontext:1,transit:[2,3,9,11],transitionground:10,transitiongroundingclass:[2,3],tree:1,tupl:[2,6,7,9,11],two:[5,9],type:[1,2,5,9,10],underli:9,unknownvariableerror:1,until:[1,4,6],updat:4,us:5,utf:1,util:[2,9,12],v0:[2,4,8,9],v1:[2,4,8,9],v:11,valu:[2,6,8,9,11],valueground:8,valuegroundingclass:[2,3],variabl:[1,9,11],variable_nam:1,vector:[7,9,11],vectori:11,verbos:2,verifi:6,vocab_json:1,vocabulari:3,vocabularyassembl:12,vocabularyclass:[2,12],w:1,when:[2,6],which:9,whose:9,wrapper:[6,9]},titles:["Welcome to RLang\u2019s documentation!","language package","lmdp package","lmdp.grounding package","lmdp.grounding.actions package","lmdp.grounding.booleans package","lmdp.grounding.expressions package","lmdp.grounding.real package","lmdp.grounding.rewards package","lmdp.grounding.states package","lmdp.grounding.transitions package","lmdp.utils package","src"],titleterms:{"boolean":5,action:4,actiongroundingclass:4,booleanfunclass:5,collect:11,conditionalexpressionclass:6,content:[1,2,3,4,5,6,7,8,9,10,11],discreteactiongroundingclass:4,document:0,effect:9,effectsymbolclass:9,except:1,experiment_runn:2,express:6,expression_util:11,expressionsclass:6,featur:11,ground:[3,4,5,6,7,8,9,10],groundingclass:3,indic:0,languag:1,lmdp:[2,3,4,5,6,7,8,9,10,11],lmdpclass:2,markovfeatureclass:7,modul:[1,2,3,4,5,6,7,8,9,10,11],nextstategroundingclass:9,option:4,packag:[1,2,3,4,5,6,7,8,9,10,11],partialfunctionclass:3,policyelementsclass:4,policyfromdictclass:4,policygroundingclass:4,predicateclass:9,prettyprint:1,real:7,realexpressionclass:7,reward:8,rewardgroundingclass:8,rlang:0,rlangerrorlisten:1,rlangerrorstrategi:1,rlanglex:1,rlanglisten:1,rlangpars:1,rlangparserlisten:1,rlmdpclass:2,s:0,space:11,src:12,state:9,stateclass:9,stategroundingclass:9,statespacegenclass:11,submodul:[1,2,3,4,5,6,7,8,9,10,11],subpackag:[2,3],subpolicyclass:4,tabl:0,transit:10,transitiongroundingclass:10,util:11,valuegroundingclass:8,vocabularyassembl:1,vocabularyclass:3,welcom:0}})