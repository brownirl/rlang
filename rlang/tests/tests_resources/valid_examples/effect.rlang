Factor f1 := S[0]
Factor f2 := S[1]
Action up := 1

#Effect jo2:
#    with P(0.2):
#        S' -> S * 2

#Effect:
#    with P(0.5):
#        S' -> S
#    with P(0.25):
#        S' -> S * 2
#
#Effect:
#    with P(0.25):
#        S' -> S * 2

Effect jo:
    with P(0.1):
        Reward 0.5

Effect:
    with P(0.5):
        if f1 == 1:
            Reward 10
        else:
            Reward 20
    with P(0.2):
        Reward 20
    with P(0.1):
        -> jo


#Effect:
#    if f1 == [5]:
#        Reward 10
#
#Effect jo:
#    Reward 10
#
#Effect:
#    -> jo
#    f1' -> 2
#    f2' -> 6
#    f1' -> 4
#    if f1 == [1]:
#        f1' -> 8
#        f1' -> 8
#        f2' -> 9
#
#Effect:
#    Reward 10
#    Reward 10
#
#
#Effect:
#    Reward 10
#    Reward 10
#    if f1 == 2:
#        S' -> [4]
#
#Effect:
#    if f1 == 1:
#        Reward 10
#        Reward 10
#        S' -> [3]
#
#Effect:
#    if f1 == 1:
#        Reward 20

#Effect:
#    if f2 == 4:
#        -> f1_effect

#Effect:
#    if A == up:
#        S' -> S + [0, 1, 2, 3, 4]

#Effect:
#    if f1 == 3:
#        if f2 == 1:
#            Reward 10
#            Reward 10
#            S' -> [2]
#        if f2 == 1:
#            Reward 10
#            Reward 10
#        elif f2 == 2:
#            Reward 10
#            S' -> [6]


#___ a:
#    if A == up and A != [0, 1]:
#        Reward 10
#
#___ b:
#    if S == [0, 1]:
#        Reward 20
#
#_-_-_:
#    -> a
#    -> b


#Effect:
#    Reward -10
#    if f1 == 1:
#        Reward 20
#        f2' -> 1
#        f1' -> 2
#        S' -> [2, 1]
#    elif f1 == 2:
#        if f2 == 2:
#            Reward 10
#            f2' -> 4
#            S' -> [3, 4]
#        else:
#            Reward 5
#            f2' -> 2
#        if f2 == 2:
#            Reward 10
#            f2' -> 4
#            S' -> [3, 4]
#        else:
#            Reward 5
#            f2' -> 2
